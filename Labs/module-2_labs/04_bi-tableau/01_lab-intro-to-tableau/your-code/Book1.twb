<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-style' value='as-synced' />
      <format attr='animation-duration' value='0.30000001192092896' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='switch' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Montenegro&quot;'>
        <calculation class='tableau' formula='&quot;Montenegro&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Australia&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burma&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cabo Verde&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Cayman Islands&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Channel Islands&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Congo (Brazzaville)&quot;' />
          <member value='&quot;Congo (Kinshasa)&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;East Timor&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Faroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Gambia, The&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Gibraltar&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guam&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guernsey&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Holy See&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Ivory Coast&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jersey&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Monaco&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;MS Zaandam&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;North Ireland&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Others&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Republic of the Congo&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Saint Barthelemy&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Martin&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;San Marino&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Martin&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taipei and environs&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;The Gambia&quot;' />
          <member value='&quot;Timor-Leste&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;US&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vatican City&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;West Bank and Gaza&quot;' />
          <member value='&quot;Western Sahara&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='clean_covid_data' inline='true' name='federated.05txcev1icmozq13w6c5a0gmo7zo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clean_covid_data' name='textscan.1lmnr8v1096dmb1br7se310rxqk3'>
            <connection class='textscan' directory='C:/Users/johnz/ironhack2/my-data-ber-08-20/Labs/module-2_labs/04_bi-tableau/01_lab-intro-to-tableau/data' filename='clean_covid_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1lmnr8v1096dmb1br7se310rxqk3' name='clean_covid_data.csv' table='[clean_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_PT' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='confirmed' ordinal='2' />
            <column datatype='integer' name='recovered' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
            <column datatype='date' name='first_date' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='integer' name='density' ordinal='7' />
            <column datatype='integer' name='median_age' ordinal='8' />
            <column datatype='real' name='urban_population' ordinal='9' />
            <column datatype='integer' name='confirmed_change' ordinal='10' />
            <column datatype='integer' name='deaths_change' ordinal='11' />
            <column datatype='integer' name='recovered_change' ordinal='12' />
            <column datatype='integer' name='days_since_first_100_cases' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1lmnr8v1096dmb1br7se310rxqk3' name='clean_covid_data.csv' table='[clean_covid_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_PT' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='confirmed' ordinal='2' />
            <column datatype='integer' name='recovered' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
            <column datatype='date' name='first_date' ordinal='5' />
            <column datatype='integer' name='population' ordinal='6' />
            <column datatype='integer' name='density' ordinal='7' />
            <column datatype='integer' name='median_age' ordinal='8' />
            <column datatype='real' name='urban_population' ordinal='9' />
            <column datatype='integer' name='confirmed_change' ordinal='10' />
            <column datatype='integer' name='deaths_change' ordinal='11' />
            <column datatype='integer' name='recovered_change' ordinal='12' />
            <column datatype='integer' name='days_since_first_100_cases' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_PT&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_PT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LPT_RPT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[confirmed]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[first_date]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>first_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>20</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urban_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[urban_population]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>urban_population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confirmed_change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[confirmed_change]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>confirmed_change</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths_change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths_change]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>deaths_change</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered_change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered_change]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>recovered_change</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>days_since_first_100_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[days_since_first_100_cases]</local-name>
            <parent-name>[clean_covid_data.csv]</parent-name>
            <remote-alias>days_since_first_100_cases</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='recovered %' datatype='real' name='[Calculation_459367183350202368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([recovered_change])/SUM([confirmed_change]))*100' />
      </column>
      <column caption='death %' datatype='real' name='[Calculation_459367183363932162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([deaths_change])/sum([confirmed_change]))*100' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='clean_covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA]' role='measure' type='quantitative' />
      <column datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[days_since_first_100_cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[days_since_first_100_cases]' peg='0' size='7.8' />
      </column>
      <column datatype='integer' name='[days_since_first_100_cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[median_age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column datatype='integer' name='[recovered_change]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='Attribute' name='[attr:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered_change]' derivation='Attribute' name='[attr:recovered_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='Avg' name='[avg:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='Count' name='[cnt:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_since_first_100_cases]' derivation='Count' name='[cnt:days_since_first_100_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='CountD' name='[ctd:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='Max' name='[max:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[confirmed]' derivation='Max' name='[max:confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[confirmed_change]' derivation='Max' name='[max:confirmed_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Max' name='[max:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Max' name='[max:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Median' name='[med:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Median' name='[med:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='None' name='[none:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[days_since_first_100_cases]' derivation='None' name='[none:days_since_first_100_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered_change]' derivation='None' name='[none:recovered_change:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='50' column='[Calculation_459367183350202368]' derivation='Percentile' name='[prc50:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='StdevP' name='[stp:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='Sum' name='[sum:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[confirmed_change]' derivation='Sum' name='[sum:confirmed_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[days_since_first_100_cases]' derivation='Sum' name='[sum:days_since_first_100_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Sum' name='[sum:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered_change]' derivation='Sum' name='[sum:recovered_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183363932162]' derivation='User' name='[usr:Calculation_459367183363932162:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_459367183350202368]' derivation='VarP' name='[vrp:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.945545' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0544554' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[cnt:days_since_first_100_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:days_since_first_100_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:days_since_first_100_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[attr:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[attr:recovered_change:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[avg:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[cnt:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[ctd:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:confirmed_change:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:recovered_change:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[prc50:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[stp:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:recovered_change:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[vrp:Calculation_459367183350202368:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:median_age:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[med:median_age:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[med:recovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:recovered:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>8</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taipei and environs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Portugal&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{aeaaa2d5-ca14-4b9d-84f4-f3a4f80efaac}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183363932162:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='clean_covid_data.csv' id='clean_covid_data.csv_C6D4BD11EF9F4B08B770CAD3331071CA'>
            <properties context=''>
              <relation connection='textscan.1lmnr8v1096dmb1br7se310rxqk3' name='clean_covid_data.csv' table='[clean_covid_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='pt_PT' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='confirmed' ordinal='2' />
                  <column datatype='integer' name='recovered' ordinal='3' />
                  <column datatype='integer' name='deaths' ordinal='4' />
                  <column datatype='date' name='first_date' ordinal='5' />
                  <column datatype='integer' name='population' ordinal='6' />
                  <column datatype='integer' name='density' ordinal='7' />
                  <column datatype='integer' name='median_age' ordinal='8' />
                  <column datatype='real' name='urban_population' ordinal='9' />
                  <column datatype='integer' name='confirmed_change' ordinal='10' />
                  <column datatype='integer' name='deaths_change' ordinal='11' />
                  <column datatype='integer' name='recovered_change' ordinal='12' />
                  <column datatype='integer' name='days_since_first_100_cases' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[confirmed]' derivation='Max' name='[max:confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Max' name='[max:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]'>
            <groupfilter expression='SUM([confirmed_change]) &gt;= 50000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <_.fcp.MarkAnimation.true...style-rule element='animation'>
            <format attr='animation-style' value='as-synced' />
            <format attr='animation-duration' value='0.10000000149011612' />
          </_.fcp.MarkAnimation.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05txcev1icmozq13w6c5a0gmo7zo].[max:confirmed:qk] + ([federated.05txcev1icmozq13w6c5a0gmo7zo].[max:deaths:qk] + [federated.05txcev1icmozq13w6c5a0gmo7zo].[max:recovered:qk]))</rows>
        <cols>[federated.05txcev1icmozq13w6c5a0gmo7zo].[tdy:date:qk]</cols>
        <pages>
          <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[tdy:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-pattern='line-pattern-dashed' lines='true' mark-color='#1b1b1bd8' mark-type='all' start='45' />
      </table>
      <simple-id uuid='{CE3096EF-2B99-43C3-B28F-CA0E8F7A6FCB}' />
    </worksheet>
    <worksheet name='a'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[deaths_change]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[confirmed_change]' derivation='Sum' name='[sum:confirmed_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths_change]' derivation='Sum' name='[sum:deaths_change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]' included-values='in-range'>
            <min>50000</min>
            <max>607670</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths_change:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]</rows>
        <cols>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{9B88E152-1EC3-475E-8B44-760289E88F04}' />
    </worksheet>
    <worksheet name='b'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[deaths_change]' role='measure' type='quantitative' />
            <column-instance column='[median_age]' derivation='Median' name='[med:median_age:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[median_age]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[confirmed_change]' derivation='Sum' name='[sum:confirmed_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths_change]' derivation='Sum' name='[sum:deaths_change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]' included-values='in-range'>
            <min>10000</min>
            <max>607670</max>
          </filter>
          <slices>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths_change:qk]' />
              <size column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]' />
              <text column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
              <text column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]' />
              <text column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths_change:qk]' />
              <text column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[med:median_age:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1A0A384F-DB85-440C-B6FD-F8AC640E36F7}' />
    </worksheet>
    <worksheet name='c'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[confirmed]' derivation='Max' name='[max:confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Max' name='[max:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column-instance column='[confirmed_change]' derivation='Sum' name='[sum:confirmed_change:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05txcev1icmozq13w6c5a0gmo7zo].[max:recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]' included-values='in-range'>
            <min>50000</min>
          </filter>
          <slices>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]</column>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]' value='169' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]' value='27' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Multiple Values]</rows>
        <cols>([federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk] / [federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{8862E5F6-ED8E-4555-9CB7-FB27320F2917}' />
    </worksheet>
    <worksheet name='d'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[days_since_first_100_cases]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[days_since_first_100_cases]' derivation='None' name='[none:days_since_first_100_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]'>
            <groupfilter expression='SUM([confirmed_change]) &gt; 50000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:days_since_first_100_cases:qk]' field-type='quantitative' max='89' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:days_since_first_100_cases:qk]' value='245' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
              <text column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed:qk]</rows>
        <cols>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:days_since_first_100_cases:qk]</cols>
      </table>
      <simple-id uuid='{B0583E29-018C-4815-899B-C1F1D6244664}' />
    </worksheet>
    <worksheet name='f'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column caption='recovered %' datatype='real' name='[Calculation_459367183350202368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([recovered_change])/SUM([confirmed_change]))*100' />
            </column>
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[recovered_change]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_459367183350202368]' derivation='User' name='[usr:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[Longitude (generated)]' field-type='quantitative' max='23452964.575876847' min='-22437835.066493303' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05txcev1icmozq13w6c5a0gmo7zo].[Latitude (generated)]' field-type='quantitative' max='16613850.649035027' min='-10449955.390436521' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183350202368:qk]' />
              <lod column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
              <geometry column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Latitude (generated)]</rows>
        <cols>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C65D0AA0-B2A3-40AE-96DA-87FB694A3733}' />
    </worksheet>
    <worksheet name='g'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column caption='death %' datatype='real' name='[Calculation_459367183363932162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([deaths_change])/sum([confirmed_change]))*100' />
            </column>
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[deaths_change]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_459367183363932162]' derivation='User' name='[usr:Calculation_459367183363932162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183363932162:qk]' />
              <lod column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
              <geometry column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Latitude (generated)]</rows>
        <cols>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A0E2E74F-BF72-448F-9FEF-FDCFDD6A0AE5}' />
    </worksheet>
    <worksheet name='i'>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_covid_data' name='federated.05txcev1icmozq13w6c5a0gmo7zo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='switch' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Montenegro&quot;'>
              <calculation class='tableau' formula='&quot;Montenegro&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05txcev1icmozq13w6c5a0gmo7zo'>
            <column caption='recovered %' datatype='real' name='[Calculation_459367183350202368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([recovered_change])/SUM([confirmed_change]))*100' />
            </column>
            <column caption='death %' datatype='real' name='[Calculation_459367183363932162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([deaths_change])/sum([confirmed_change]))*100' />
            </column>
            <column datatype='integer' name='[confirmed_change]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[deaths_change]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[recovered_change]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_459367183350202368]' derivation='User' name='[usr:Calculation_459367183350202368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_459367183363932162]' derivation='User' name='[usr:Calculation_459367183363932162:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183363932162:qk]' included-values='in-range-or-null'>
            <min>0.0</min>
            <max>22.222222222222221</max>
          </filter>
          <slices>
            <column>[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183363932162:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='switch'>
              <formatted-text>
                <run>switch</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183350202368:qk]' />
              <lod column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' />
              <geometry column='[federated.05txcev1icmozq13w6c5a0gmo7zo].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Latitude (generated)]</rows>
        <cols>[federated.05txcev1icmozq13w6c5a0gmo7zo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A69E5C7F-BC5C-45DE-9890-C407E237830B}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='208'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
          <strip size='152'>
            <card pane-specification-id='3' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths_change:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[mn:date:ok]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths_change:qk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA7439A3-65D0-4030-B6B7-97C2B2F52318}' />
    </window>
    <window class='worksheet' name='b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:deaths_change:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed:qk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[sum:confirmed_change:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CABE8C28-C602-4E61-8743-EB66D9AB7C66}' />
    </window>
    <window class='worksheet' name='c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='12' type='pages' />
            <card size='30' type='filters' />
            <card size='76' type='marks' />
            <card size='40' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='276'>
            <card pane-specification-id='0' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4194F1B2-597C-44E8-9D3E-7944CD9444AB}' />
    </window>
    <window class='worksheet' name='d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E993EE45-DD23-4795-B6F5-CC05BD608E57}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]' type='color' />
            <card looped='1' type='currpage' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-14 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[:Measure Names]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:days_since_first_100_cases (bin):qk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[yr:date:ok]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[yr:first_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B41AC8D-D990-4120-801E-B492673DAEA1}' />
    </window>
    <window class='worksheet' name='f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183350202368:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[ctd:Calculation_459367183350202368:qk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A64483ED-8985-417E-AFF8-55E03A8AA6B1}' />
    </window>
    <window class='worksheet' name='g'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183363932162:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FFD9EB0-C6BC-4C62-9F33-49E206D75646}' />
    </window>
    <window class='worksheet' maximized='true' name='i'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183350202368:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:AdhocCluster:1:ok]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[none:country:nk]</field>
            <field>[federated.05txcev1icmozq13w6c5a0gmo7zo].[usr:Calculation_459367183350202368:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7211879-2209-4444-994C-88AB377EF13B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='a' width='192'>
      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
      NOHzxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='b' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3hc533n+zl1esEMZtABAgQJkhCrRBVSVHFkq9iRXBTb2bXXcexs4ru+
      aZt1brLJxs/GybN51ulxcu3crNcbx3GPrNiSLUUSVSiKVSyiSIIkeh1ggOnlzJlz7h9DQSwo
      gzqQcT7Po0fEzJlzXmDe71t+768IpmmaWFisU8RKN8DCopJYArBY11gCsFjXWAKwWNdYArBY
      11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKw
      WNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gC
      sFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNfIlW7AQjFNk6JhktN14hmN
      ZE5DNwwUScTntOGz21BlEUm0tG0xP+8IAZimSTSd42jPKEd6RrkwOslwLE1eL950rdumUO93
      sasxxB1tdexsDOF1qBVotcU7AWEtF8kzTJPTA+N8+0QXR7pHSeULC75H0GXnwc4WPrinneaA
      dwVaafFOZk0KwDRN+ieT/Pm/neS17hGMZWihKok8tmsjv3RgO36nbek3tPipYM0JQNOLfOt4
      F//fy2+QLejLfv+Q28HvPLKX/RvrEQRh2e9v8c5iTQkgmdP4ox8d5YWLA6xko2RR4Bf2dfKp
      uzutzfI6Z80IYDKd43PffZkzQxOr9szHdm7kvzx4K6osrdozLdYWa2L4S2Q1/p/vv7KqnR/g
      B6ev8MVnTlA0jFV9rsXaoeICKBQNvvDUEU4NjFfk+U+cusLXj1yoyLMtKk/FBfDNYxc5eHGw
      om34+5fOcrx3bFGfLR3MGehX/zPWxorSokwquge4Eonxyf/9DLkZDrRWm+aAh6998kFcNmXe
      a4uGwWQ+y0gmSTyfI1vUKRoGggA2ScatqNQ43IQdbuzyO+Kscd1SsW/HME3+9sUza6LzA/RP
      JvnOiUv8wr5ts15jmiaDqQSX41EShfyM1+SLRRJanuF0EkUUaXL72OyvxiZZQliLVGwJdGZw
      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
      877bNmO/wSM0msvw6mjfou99e7iJaC5Nzxw5gRySwr66FuxXk2cNJJL8sLsbfRkqXgvA3Y0N
      7AwtPm+nxeqwYAG8RSqncejCAD9+/TJv9I8zmZpbDIIA1R4nu1treWBHGwe2NaPOYhs3TJPn
      h66QXWBacygdOD3Q2I4gwPmpcfqSsZvcITyKjT2hetw3BKoMpVI83d07Y13icpFFkbsb6tke
      qowFzWJhLFoA15LKavSOx+gem2J4Mkkqp5EvFLGrMj6nncagh421VdQHvLjKzOHYm5zibHTh
      wSpbq8Js9JaSxpqmSVzLM5ZNkiloyKJE0O4k7HDPegqcyGu8PDhEd3zhWTJCDgf3NjVS63Ja
      I/87hGURwEpgmCbHIoNEsuXXCAjandweblqQi8Nszx5JpzkxOsZgMkVxjj+RKAiEHA52hqtp
      9/vXdJY3i5tZswIA0IpFXp8YIlJGobyg3cmtoYYlJcSdiXShwFAyxVgmQyJfCskUBQGXolDt
      tNPo9uCzqdaI/w5lTQsAoGga9CamuJKIkp8hqEQVJdq8AVq9gSWP/BbrjzUvACi5IxdNg2gu
      S1zLUjAMZFHEp9oJ2p03BcRYWJTLO0IAFhYrhbVmsFjXWAKwWNdYArBY11gCsFjXWAKwWNdY
      ArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjX
      WAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY11gCsFjXWAKwWNdYArBY
      11gCsFjXWAKwWNdYArBY11gCsFjX/P9Cq04SpLFe1AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='c' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='d' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='f' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='g' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOS9V3Bk2Xnn+bs+fSYyE2ngbRmUr2rLrjZsR5EUuZwVKYo7mlFMjDQvs9qI
      jdh558tGzDzsy64iNhTa1cOMpBFXokiKbEe2t1XVXRZVqIK3CSAzkd5nXrMPALKAAlAFlKf4
      j6ho9M17z7333O+c89n/EXK5nGUYBna7nVwuRzyVwufxEAoG2YjkygqmaTIfi1H0ePDqOl5V
      ZSKXQ1ZVBtxuujo7SaXTXBsfpzMUwuFwML+4yFIySUPX8Q0MIAgCsqaBIDTbrqbTaMUiLzz3
      HNVqlauxGZwtXn4bYJkmjrJOT1f3Q7+3aZrUajUajQaCICBJEg6HA13XqVQq2O12ZFl+6M/1
      OGE+FiNWzuOsm9g0la7OLjRNY+T6CJlsFjmeTPLV+DgRv5/ZWg2jWOTpvj66OjoAsCwLQRDo
      7OhgdmEBVdNYTiQwZJmO3l6Wbtyg3e8n3N+Poii0t7XR3tYGQL1eJ1Mqcby1lXe++gpRkli8
      eJG2EycQBAHLskhfv04kEOBgXx82mw1N07AviMRXkthcTlSb7VH23x2RTa2QGpmkVChy9OhR
      CoUCfr//odw7n89jWVZTyN1uN4qioOs69XodAFVVEUXxoTzP4whRFGh3eRno6UXYMOmeOH6C
      UqmE9F/+83/+sSIITKZSqKEQtXKZY11duF0uAD74/HMcdjsup5PEygrJbJbTBw8y1N9Pi8+H
      V1EYTSYZSyTIJZN0t7dz7cYN3C4X87EY53M54skkRj5PDdBrNURZRnU4EAQBtVbj+1//OsE1
      oREEgWhrCKVmMD0/h2GaGI0GpWQKu9f9KPrwtsgmkqhuJ+OTEwQ8XpaWlmlbmwAeNBRFQZIk
      dF0HwGazIYpicwCsr+wbP/xvIyzLArir9/C3tBBoaUEQBNLpNOeuXqZaLuP3taz2V61W4/CB
      AxwMh6nH43S5XAQDgWYDAZ+PTy9dwjRN9vX18crXvkaotRVNVVdXhs5Oenw+wppGTzSKYRgM
      JxJ8NjxMX08PejxOTVUpl0pkRkcJDw2RuH6dciZDNZcj6vNtmaEuXLxILLbA/lA7JLKUpxeR
      GkazIx4nRHq78YaCHBvYj7/FzxOnTj20ezcaDcrlMpZloShKcyWQJAmfz/cvQvgBMpkMlUpl
      y3HTNDEMY1dtVKpVvhi/jhUJMFbK8Obbb5PJZBBhdSntbW/nB88+y+vPPIOiKM0L9/X1USgU
      iCcS2zYsiSKKYfD6s8/S09WFLMsEDIOBtjYW43GUWg3F6ST09NN0PvcclmHg8vtJjY6iplI8
      f/Lklo90YP9+NJeTmXSCVKWI//AArp72x/Zj2lxOCk6Zdz7/eNcf5H5gfQWAVVVnHZIkIQgC
      tsdUfdzrROb3+3E4HFuOXxkeJpla2XJ8enaGbDa76X5nhi/hiATR6w1SY9PsHxxkJZVClCSJ
      a+PjyLLc7LB4PN5swG6388ff/S7hUKjZmK7rWJZFLpfjr/7bf2PcMPjphx+ysLSEZVm8dPo0
      xWKRD6amkA8cQNY0JEVBUhQsyyJ48CDtTz5JvlbjZ++8g2mam17A4XBQrdUo6TV6Tx5BlKTH
      Vo+tFEuk5mKYhQqqy/lQB4AoirhcLiRJag6EdQiC8NhNGKZlcf7qML/6/GMWFhfvub2uzk4i
      ofCmY5ZlceniJex2e3OgraysUJRBEEUkRcY/0MO19DKFSmlVBTIMo9lZlmVx5sYNhicmmo0u
      JRJcGhnBsize//hj/vJv/oaf/PSnLC4vE/T7MQEjHOY3587x/tmz/OzNN/nFu++yNDZGNZ+n
      uLJCvVwmOT7O0rVr5JeWEEQRV18f5jazlCAIPHPiFEFUJr74ikIqc8+d9SCgNxqMffYlR9t6
      +PrJp3DXrU0z8cOAKIpomrZlADxuME2Tr86fJ+OQcHe1Mbe8dM9tbudsWIjF0DSVsbExqtVq
      00PG2qIjCALe1lUVv1GtI5+bmsKoVqnWajidTiampsjZbFCpYJomoihi6Drvnz1Lo1plOhYD
      t5ucy8XFmRl+/+WX+fkHH5Cv1ajVaizbbKRqNUJeL9FQiGouR6lcZqVU4nBHB3W3m4DLxbXl
      ZVy6zsunTm07u8uyTHdXFxWXitPnoVaprhoyy3EUUcITDqJo2j134r1AVhTaD+1jdHSU1mCQ
      QrHwSJ7jcVV1dF1ndm6WgD/A2Mw0y0IDtyxTSKV5qqP3gdwzGAiwb98+BFFClmX+4Vf/jKcj
      iisU2HSe6nSQ0A3kUqlESdP4xZUrvNrfT19PD8Nzc6QqFZbjceqNBm6nE81u58LwMHWbjeLc
      HL2vvEIjlULTNE4fOUJD1xF6ejizskJqfp6XnnqKF0+fRhRFTNNE13UURUEQBObm53G6XJRL
      JfwtLTu+TG93D/lymdGxKbRKA83poL81RH9fHzNzc4xOTRDs70J5yLPuRvijYcqOAmcvnMfv
      2/ldftdQKBT4+5/+I9GTR9BXlvCEgjgtO4WFZQZbI4RaW3fdVqPRoFar4VrzTG6HWq3G27/5
      NalykWq9jluQuNoWpiJYREIBWHO7r2s6Tt9qnEn63g9/+GM5GER1ubh64QKHBwYYm5mh6nBw
      9tNPiUsS+1pbqefzjM/M4Gpvx9Hais3jQSiV8CsKLreb0fFxnjhxgsmZGSy3m0q9zmB7O4qi
      IIoi1WqVCyMjzCwuspLNcrC/n4XFRbq7unbUVQVBINIaoj/aQVdnJ4f2HyQSjqCqKqHWVgY6
      urhy7jyiQ3tkq4FpmiiaSr1U4dlTT6Aqj24wPi5YWl7mo+GLBPb34/S6UZ0OiqkMQUPk+WMn
      CbeG9mSfrKsz26k8pmmSz+cZGR3lxuI8/U+dBFHA3dmOvdVPoKOtea/t7in8/IsvrIxlodhs
      WIaBls3iUBTioojmdtPI5/n20BA2TePT8+dp1OtcPH+efb//+yycP4+7XscVDuPwePjO6dP8
      8swZGoEA2YUFxHQat9tNyONhplTC3tYGoohRq6EvLvK955/H5/PdfU+zusy+d+5z3D3t99TO
      3SIxt4AgimBavHrkFKqqbvKi/a6hVCrx9pdf4O9bndiqpRJaocpQd1/TkbJXTE1N0dfXt+X4
      7Pw8U8sx0rUy7lArqt22o4dpO+G3LAtZEEWWz53D292NKIo0PB4Mvx+7aa5azZbF1akpqrrO
      7734Irqus5jPAxB0OBjYt48J06Tm8XDp2jUylQouwNveDu2rQjmfz2Nvb0dcM9REux2ho4P5
      paV7HgCyLKOteZcehdejtbOd+csjCA2Df46/w1DvAMeOHn3oz/E4YHZujnMjw7i6VmfdSi5P
      VNA49sTT9/RtxibG6enpadqK1WqVuYV5xtIJHOEgfmF1Zdit8G88T+5QVfpefpkrk5PUFQVR
      05DSabyAIcsc6O3F43Khr3mKFEXh2UOHyBUKRE+dolAsYiQSCC0t1BsNgjYbmVwOzeWimEzi
      iUSweVf1rVqphCTLyJpGamIC6T4JyrHBg5ybuI677e5mmHuBIAigyvRFO7AA0zLveM2/VIxP
      jKOFAtjdLvRGg9r8Msd+71v3PDH93uvfaP6dzmR4++23afgcdA4d2FXbGyfHjd5OAHnowAHe
      P38euroQKxX6FYUnjx9HVdUdZ9VjBw9iGAbjExP0dHayvLyMlc3S1tlJNBjk/NWrZFMp9HSa
      sqpSymQorawQCIdB15F9Ptq9Xvb1999Tx6yjxedjsDXKdDGP3eW8L23uBZ6gn+mFeY4M7Ofg
      gQMP/f6PC9LFAu6In2I2R/zaGN955dV7Ev7p6Wl6e296i6rVKm+99RbTiws8/eS3d932+sph
      WdaWmJMM8PKpU1wfGyPS00MkHL6t0bCOYqlEe1sbLpeL1195hUajgWEYOJ1Oeru6sCyLUqnE
      SiqFc/9+7DYbqqoiSRKVSgWXy3V/VRbDpJwvPPQBUM4XME2LmmEQvCWD9mHjXnJm7hXxRIKi
      pRNw2ElMzfLdV16jdQ+enu3Q1dUF3Ay+lkolDg0NMbu4QLlQwBPYbBRvfO+Nas76RL6diiTD
      qh/5xC7VEdM0mZyaYjGZZCEW4w++8x2Wk0k+Gh/HEgTCioJb0+iOROjs6MDpdJJac5euB4nc
      7geT1FbJ5qEt8kDavhXrnRqfmkXVLb7z4sv3bM/cKx5V5Leh63x57Qr+jnYq+QKOqn5fJoP1
      4J6u60xMTuJxu+nr6+PpJ56kdovX71bVZiMsy9rRPpAzmQyRSGRL52WyWfL5PGcmJgh7vbyw
      lsJ88coVzi0s0KhUsLW0MDE1xeTCAqbDgaOlhZxlkVxe5uljx0hlMnxw5QolWSZsGBzbv58v
      x8ZQBYFsoUDY70cWRZ4+duyeI6jt7e2ML84/FGPYsixmLl2j/cAAPccOkY0nm+nHv4sYHRsj
      VS7S1d/F0tgkLx4/sWvdHDYLb71eR9sg3IuLiywlEtSNBvOZFRpYiCEfmsO+bVu7xeL4JDZJ
      QZyam+PiWprDRuQLBb68eJG6JLGQzzdzXBqiSDmVIjQ0hNRooCkKgqbhWAtombrOgbVs0veH
      hzFaW5FNE6HR4O/ffZdKIMBCtUqqWiXhdrPocPDOmTP3nOmpaRpH+gYfeNpEuVDkykefY9M0
      kqNTFGNxOhQnvtsE9P4lw7IsEEC128ksJwg73LRFo3e8zjRN3vrkQ85eudScoXO5HOcvXGjq
      6aZpcmFqnLzfQbXVi9IewtEexuZy3lNumGVZyIg8s28Isej1ciOR4NylSywnEoyOjzM7P898
      PE61o4N0Mkmb3Y6iKJy9coWo348mCDQqFaRikcvDwxSqVSzLwmg0aORyHOjvZ2ZujppzVR/3
      6joXh4eR1jL6XJEIZjqNaRgUV1ZYrlZ3zDbdCzRNo54v3nM7t4OsKIiCQGo5zvLSEhGnl2NH
      jqL+jvr+i6UiI8lFIgO9rMzO87UTp3Y1+ydXkizOzlPJ5TFNk+TKCuMTEwwODKDrOplslsvX
      rqJJ8n1Pg68WS2QSSb6cm0QURJHM8jKj1SpvX7/OzOwsb1+4QD6dBsDX2UnPWgAjUyrx0dgY
      ju5uFLsdZWCARD5PwO0mv7REy8oKT0YieNxu5hMJZJsN0zBwyTL+Q4fwd6+VDQoCnb29DJom
      UUDP5YgnElss9L0iHo+TS25Nj72fKGayBNujqKpKuL+HWCz2QO/3uOPG5CTBrtXqwa7WMHa7
      /Q5XrOLS5DjR40NUgx5+8/knBAMB5hZj2Gw2iqUiKysr2O127A8gwl+rVOh/8jjetjCiIAgE
      jh5F83oR7XbmRRFPXx81y0Kv11HtdtLF1Vn1xePHEWs1bF5vs7bXFQ7THQwiqyr7+/sZ2rcP
      gES5jCAIiJJELJWiMj+PtDZLllZWuHz2LG++8QbD4+M4u7u5kMtxfXT0nka7IAjoD1j/90fD
      +NsieFp8yDUd8yGmPz9uMAwDc60arVYuc7B/YFfXmaZJUa/j9Hmxu13UhVVXpT8YJLGS5IPP
      PuXs6DWypSLtgSDVxXufHDfCF2pFXrM5RbhphGguF+5IBEEUqVgWYqWCIEksFQpYloXD4eCP
      XnuNlnIZ0zBoVCoY1SqFfJ7S6Cida3XEwCZBLNfr2NvaKGdW9XPF4SBw4ACuvr7VAJsoonk8
      fDoyck/GpMPppGN/P9VS+a7b2AmmaTJ9+RqGbqA57ISHBlE8Tp48+fAqwB43jE5OsGhUV+s1
      JIl6vbGr6zKZDIrz5krhkBVm5udYzmdIrKwgKQp2r4eSx8bo4jxP9O8ns3Dv9QPbQfrRn/3Z
      j2u3GBSCIFAzDASbDVnTKJTL9Pp8zZrTNr+f81evIqXTPH/0KFdiMaxAALthNNkkRmZmENaz
      9xQFMZ1Gi0QQZRlJUXAEArjDYVyBAKrDQbVQYO7iRS5fuEC6XKYjEtlzTs1yIk4Bg6lzF1me
      mSPQEW2mX9wrBEFAtdsY/uQMgiDg9rdgYpGYmqV/mzyV3wWkUmlmFhcQZQm7y0U1naWr7fY5
      WZZlMTI5juFxIIgitXKFLqeXa8sLKG4nqm5iRfw4W3yIkoTgsDE6OUE6toTT72vO3PcLorxD
      Lrnd70db99cbxiZ6DYfDwTNdXXz/G98gm89TVRQ80Shfzc42zxkIBDBnZ6kkk6g+H1J3N9La
      w69XKwmCgLYWENNcLjydnaRKJZI2G7/5+OM9q0MDvX30qR7agiFkEyqF0h674/awTItjLz2H
      kS9RXEzg9HqYSi7v6TkfZl2zZVnk83nGxsep1WrE4/H7ev8D+/YRkm2MnfkKyzTJNFYpWm6H
      S9eusiJbSGvyJIgChXIJVdNQ7TaQRLI3pkjPrdpWkiyjOB0EPF4059ayyHuFbJkm5UwGzeVq
      6uhbTnK7uTY6yokjR5AkiVKpxJGhIQB0y8K25gLURZFyuYzD4cDjcFCRZRrlMjZAdd4+QivJ
      Mh3HjxPev5+pzz4jJorYZJmTx4/TusugiizLeL1e3D4fodZWxqfmcPvvX3Bq4vwlZJuNgN9P
      xOEhVa3i9Lgpl8s47/B+DxvpdJobN25wYXiYUqVMNBQiWShwYugQT504cdvc+r3g9LNfI18u
      UUhl0C2D9z//lFdPv7BthZplWczMzuLa39M8ptpsLCUWafe2kLEr6C4nLV4HhZXUzXMcdhKl
      Is5qFW2XRvZuIQbKZU643bSXSqyMjm57kmy3c7VY5L0vviBfKDAyMtL8zWmz0Vir2HdGIrx/
      5gymadLX04N/bcYvJpPNDtBrtebfyZER6musBrC6Mih2O+EDB7AEgTng5x9/TKm0+5k8m82S
      qBTIKBYaIoX0/YkLxManKOUKGJUqasMk2OLHTGRxWOKeZtUHGaQzTZNqtUo+n+eXb7zBW+++
      ixxuxd8WJWea2FuDJO0K//Txh6RSqTs3uAs4nU7+x29/h1ORLvrsXpyyQqFQYGp2Zsu5giDw
      1IkT1MqVLceDPj+NWr2pagY6b6pSNpeT7hOH75s6uxHS7//pn/54plYjXiigeTyo21TfA6gO
      B0VB4MszZ3jt9GlUVSWbzZLMZMgqCqIkYZkmybEx+ru7cTgc9EWjFGIxKpkMpUQCDIPc4iKJ
      GzewiyKmKGJLJDA9nubqsz4IVKeTzOwsuUSCbKPB0C717As3rmFIIuVkmpq8WvlzP8i1PIEW
      RElCs9twd0ZYymdolCoc23+Q0F3mud9PWJbFb957j5//8y84f/48y9kMLR3tRPYNgqqietw0
      ajXysUV6Q2G62tqadCr3ClEU8Xg8RCMRurq6mJ6Z4fLSLA5Bwu10bQpazS8skBdWi4jWoVYa
      ZIoFZL9nx3tIsvxA6p6lf/ef/tOPG4qCbRvht0wT1lIL8svL5G7cIGizMXTgALVajb/91a9o
      sduZvX4dQVFWq6OKRarFIp2dnaiqSl9fHwPd3Vydm6NeqZCdmeH106dJzMzQ29qKLIqU02kk
      v785O4qShOZykZqeRnW5qKVSPHFid+H1ibkZVL8HvaFTWUyi+b33LUHOHWjBGwo2l2GvqHBw
      cN9jwVgxNTXFL998k6qhExjop/v4McL7BlFsGvmVFHa3C3drkGw8weSNGyzEl7hw6RKndpm2
      sBGlcum2lW8Bvx+zXOXTC18xn0sTW1pCNEx8Ph+Xr12ljInN6Wjet5EvYgKS+/7r+HeC9O//
      5E9+XE2nqcly0zCBNdKhRILS4iKiy4Wp6xRWVjgyMIDDbmd0aoqs00ksnWZ/IECLolCQZaRQ
      iKvnzyNZFpYo4vN4EASBkfl5XH19SA4HpUSC737zm0iiiMPhYGlhAU0UMZ3OTZmonkiExOgo
      NrebkNdLyy7SDTrCESauXedQTz+yomDYlS15I3eLdcO9nC+g5io8e/KJR87GUCwWuTE6yj/8
      6pdoPh++aATJZkNzOZtGY2FlhZa2NiRFIT4+weHTTxPe10+lXufcF2eoNuoIloXXs/MMvI5M
      JsNvrpwnlUjSvebxMU2zSaAAq5SYxXweQxZxdkYRXA6WcxmysSX29fVTyxXQHepqJR0gFCs4
      ZYV0Pk8tlUGya5tk8UFCRhDYHw5zPptF1jT0ep1GsUirrqNJEpWWFpRcjoaioIVChEMhzn71
      FdhsiJqGr7OTzPw8FIs0fD6cLhehwUEujI8zq+sEvF5UVaWeyaC1t+OJRjFmZ3E6ncRXVjhx
      5Ai6rjM8Pk6lVMK/QdURRBGj0aDH56N7LTX2TtA0jW++/CqGYRBPr+D03vmj7haWZVHMZHGU
      dE4/dW9VTvcDhUKB//sv/xLTMpEkiUOvvERydo65WBKI06jVMI2bjHq1UolwVzue4GquVrin
      C6Gvm7qmcTWbIJHJcGLo0KYVrVwuN93fsJqTL5gmAfdqv66kUnz0+WecfuppHA4HlUqFSxNj
      2FUVr81B2TCQZBmbz0MiX2DhykVOHz/FZ9eH8fasxo3qIjw5uJ/zV6+QajSoTcegt2OTmvSg
      IP3hn//5j0evX6fP56MRj+PXdZ7s6+P69DSxUgnT5yMzMcH3v/lNDvT14XA46GxvJ+DxcO3S
      JSrLy3zjhRdwezwkLQtJUaiXy2iaRkOWcdTrpNJpljUN1eEgPTPDgXCYrvZ2Muk0doeDgN9P
      rVplcXQUS1VR3e5mFFlzuZi6epWgz0dra+uuhC6VTvPzd96iZOn4wnefkz57bRTVbqNaKpNf
      TuKqW+wPd3Bw36NXeyzL4srwMCOjo1QbDRSnk9lYkmK+RL1tgGouj8um4PC68YVDiJJEJV/A
      7XZiW1sZJOXmqi9rKiVMFqem6YhEm++XzWZ56+MPmYsvEfUH8fv99EfbcdgdfHTxS85evIAu
      WGiSzJXlBWZTcextIUyHRk0VkTfYGIqmofjcxGZm0RUZm3vVEyXYVOKTMxRsEt6OKEahRLXR
      aP7+ICH94fe+9+Oh7m7aQiEODg6SyeW4cf06pUyGuiDgDIexHA5Gx8dp9/tRFYVcocD8/Dxp
      lwtLVZkZHSWxJrgAqsuF4vNBNktnSwvvf/klnp4eBFFElCSORCK0+Hw4nU48Hg9vffklSVXF
      yGaxGwaWy9WMGdjcbtwdHXzwi18wOjLCoUOH7ph4NjM/x+TiPMVsHm9r4K5nklI2R6ul0Gpz
      8cyR43S1teNeG5yPGhcvXUSSROrVKql8DiHSSSPQjhmMrq6cDg+F2AI9+/qa3hPFZiM+M4fL
      69okmOsQZQnDoXFleJiA043T6cTpdDKfjCNHAixOzdDX1c3E5CSXluawhYP4O9qQNI2iYOJu
      DWD3epqq4nZeG1EUsWwqNu/NfixlspzsHWR+aRGbz8PM+CSh3q6HogbJSlsbXyYS2NJpqoaB
      5vVS9niI37hB+/PPo9rtqGtG36+npkDXQdNo1Ou4AgEKug6yjOK9yeff1ON9PixRRA0Emp2h
      ud1cnJ2ls31VmCzLorDGGP3aiy/i83h499o12OBXVx0O+l58kUI8zk9+8Qv++A/+YMf6Acuy
      GJuaxBMMIKsqtrs0gCuFIie6B+i/hVb7ccHxY8cpFAq8+8kn2KIdVCK9bHxKQRDQb3HPiqKI
      v6uT9FKcaF/Ptu2Kooi3p4MvRob57gtfX92DwGjgTeY4dvAQl69dZaqYwRe9SUnoDuwtFfxW
      ChupUl9Np7CtHm8JtxK7MU730UMPvO9lWVVxRVarqNYXHI/dTjocJjk5iSMQuJkrtEHItbVA
      ijMYJFMqrbJI3DLiVZeLT6enca+VSAJgWdSq1U3G7nP9/aiaRld7O7VaDUkUudWz7g6FkFWV
      qc8/5//6i7/gG6+/zuHDh7d9KUuV6djfd9edZ1kWerZIz6kH/wHuFpZl8Zv330cLtWIIClu5
      k8GQNYxGY1P6QGYhRv/QIJZlsTQ6QXT/wJZ3FAQB0e0gX8jjdDiRRYmqZWKz2YhlVvB13Tv9
      u6HriJJELp7kaLSDsbkZnGvsbcHuToLdnfd8j91AtNganhcEgdZ9+7DvosRP1jRa9+3bMUjh
      aW+nmkxSLxSYP38eK5nkG08+uUmHHuzvp3stke7cyAhGSwuiKDbrOGOXL1NIJLB5PPQ//zx6
      SwvvnTmzLRGtIAj0tEYoZrJ7Ioi1LGvV7QsUMzn6W6N33F2lXC5TLm9NvJuPLdBoNB5o2sOH
      H31IRpPxd3WSk7Zf5QSnm3Iuv/1vgoDD7SJzbZzCUgJ9QyKbZVnYDAvTMKlUq/gdLuSwnzcu
      nkUOB7Ztb68YP3uBsz97A61YpVitkJEeDa3Njl/YFQw2N7HYKyzLwmw0VvV4QcBrGIipFEvJ
      JF978UVadhhYNyYmmBcEZElqCo/RaGAVCthVlenxcdqOHEHRNPq83m0NUcuyyFbLeDr2Fpwq
      5fJk40lcXg+ddi/9G9gItkOj0eBXb71J1TT41tdfIZ3JsJSIY7fbmc2lMM+d4w++890HskVR
      vV7n2sh1xHAr8UwJgls9ZJZlQaOxml+zAf6ODpLzMcI9XXjbIhR0k1OdfaxkM6QyafJ6HZco
      0x+K8vnYNQxRoFYsEwx0E+i4fxt/7HvmFLnlBHXdZK5awBV4OLvq3IrbujJ2igrfCUajQWp4
      mPLiIpZhUCmVWFhaIhoObykctyyrOVtGgkFqKyvN45ZlYeo69Xye77z2Gi6gWiiQmpzk0NDQ
      9lR3gkBXMEx+ZXehftMwiI1NkZiYQS3XOdXRz+EDB2878C3L4uq1q0wvxsDt4IOPP+bMxAgp
      2WRFtQgN9uLoaePStasPZBVYWFhAi4bxtUcpqO6mP33j81lTNzjqlBGTqWb6CYBi0yjlVkl8
      BUHA1RFhfHaGY0OH+PoTT/OtU89wqLuP69kE9kgr7nArgb7duaD3AlGSaGmP4u1uf2TCDyA/
      iGVHVlUChw9Tmp9n+dIlDg8OUnO5CGraFibjuYUF3r50iYDbTbZWQ71lgCh2O/4jR5ibn+fV
      55/nF++9x7/5wQ/ou80M3dfby9KFFIVMFqfHvaN6ZlkW2eUkB1qjHH7xVSzL2uzLOY8AACAA
      SURBVLV7s6uriz/45rd595OPkLva6DkwuOl3byjI9OgkR24p8r5X1Ot1FhZj6JZFrVpD0Lam
      eVi5NH/4zAmOHz1KMpnk/RvXcLWvzt6lXA7PBqPVMAzcNhvjE+Popsn+gUGSmTSKe3NQ8rcZ
      6xTpG99jXb3eVBBzPyFpGp6BAfp7e6kYBq72dvJ+P2+cO0c2l2ued2F6Gm9fH3lZJrW42Kz8
      WRdEQRDwtLXx6/PnicVi/Icf/YjOOwTFBEGgxeliZniEycvXbnvu0ugk+wf3rRp+uxR+QRBQ
      FZWJqSnsfh8dtwg/gF6v41Ns950ndH5+ni+uDtN1/CixxRSifav+77AMhg4cQBRFrkyMw4ZJ
      R9E0SvmbNO6KqpIrlxAQuJZc4qdvv0GpUCAdu3f+/scFG7/rumax/k/c+D/3C5ZlkV9aohKP
      88yBA01jVa9WyQsCb3/8MYXC6kfYH4kgLSxwQFV57cQJspcvo9frm0rgREmi7eRJvrx+nUql
      gnMXqpnb6aSUydM9tH/HcyrFEva73FzC7Xbz8ksvEdAcVG8xhKuFInKqwOknnrqvAbNarcb5
      8TGiBw9QzuWRjK3Vc5Zl4XE6sYCpmRlyDm2TimFzOqk39E3XNJwa8WyaflcLaihAKeAm1HP/
      1Z5HBUla3Stg/b8b/xbv99xfzmRIT01xxOvleydPksvlSGcy1Mtl7Pk8/bJMURT58soVTNPE
      pigc7Ozk2Sef5OTx4/z7f/2vWfzkE0qpFJZlkZmcJLewysCs+HycPXduV8/R2dHJgeNHUW07
      qx+iJOEKtNx1Pk+j0cDtdqPlKuQSK1QKRSoLcfY5/bzwxNO7LhC/EyzL4vr16/zTz35GLB6n
      nM9zZWyBQkvHlvO0QoYXusIsLS3xxdTEzaKmTSdu9vzZ/T5yDoX5Ug67142kyA9F7dlYGLXd
      8YcBmR1uthPB1PqGFzvB5vEg53I8dfIkoijidrmIRiL8+vPP+fpTTyFJEod1HbfbjWmajE5O
      MrT/5iztdrv5w+9+lzcvX8YZCKwG5kZGWIjHEVjdF2o3EASBNo+PeCqzY6AmNj7Ji4dO7Kq9
      7eB0OnnxudMYhkE6naZUKdMxeAT5PifIZbNZ/ukXP6f18BAtoQCWIGCYAqL95kpoNup48in+
      3UvPEovFeOfsFdpPbf9ugd4elmfmifbenOXtLic8ZFrJnWTsYVbNNdfn9ZuK4u0LPG4n/Hq9
      TubCBZ4auBlckSQJp9PJv3rtNcZmZ/nJJ59QKpebqsHBwUEajQaNRoOJiQkKxSJdXV0cCQRo
      XL+ObLPhPHSIrx04QKsg7GkP3qMHD2GVtgsRrbo9O5w+Onc5oG4HSZJobW2lp6t7V8Jfv0XF
      2wmWZTE1NcVf/vX/ixLwEx4cINDVuWrU38JCLSSX+MMnjxIJh6noDaLHj+44iyqaRvkBEAfs
      FbcapY8kDiBwc1YXBGHTh9krzWBmZIRvv/givT09m443t6VRVV44eJCO9nbODw9TqlYp1Ouk
      NY1PJiZWU6JjMU739nL6ued4zrIYnZpibGGBy9PTfOO55/BsiEbfCaIo0hMIc31mjvAtOq2s
      KnjWUrUfJmq1Gn/913/ND3/4wzvuKL8Qi/Ff//vf4e/vo/eJk03PheawYyXSm87t9jgZWGPb
      9nm8rJj6dk0CkFlaItxxk71tJ+LYB43t5OthP4sorEVc12f+W2++24dpVCo8MzS0Rfg34vDB
      g+xfc1+2trTQ39mJ32ZDVlUcHR1IbW3IwSDvXLpEJpNBEAQO9PfznRde4Psvv8wXX365587p
      7+nFLFa2XGfoxiPZ00tVVZ5//nm8uxjIc3NzhIYOEOrv2/RtJFlGuUXAO703MydbW1qoFbdn
      yCtlsthlEXfLTXfzXjxg9xt3K2/3C+L6TQ1j553Yd+Upyuc5vkNuznbo6uggGgqRy+fhlqXQ
      3dXFry9d4o13322mGgSDQb7/ve9tu2Hy7aAoCi8/+SzTF4ZJjE2TWYoD0CiWiUYeDpP0RgiC
      wKFDh7YIXKlc3qIWZTIZytkcsavXMPWbaR+iJGNVNtdJ+72e5vdJZ7PIt2TAWpZFrVTCqpYI
      d3cibdh72TTNR7ICbHy2++2J3C1EwzDueXNn0zDo9/n2HPa3LIuA14t1y/0lVYVwmIwgkMlm
      mV9YACC2uEhs7e+9wOfz8a3nXuQbTz9HcX6ZUi6PWLm/Aaq94FZ9t1qt8rd/+7dbBoDT4aCU
      yeIJh5CUm30rKTLCLfGF92bjXBgeZnh4mKXFRSY/P0spk8WoN0jNzNGYnUeKLWNUqhj6VvXo
      UQ6ARwlxvZzNNM1VqrsNf283MLYbqUa9TsseaTZmZmYQRZFwayvV/NaELcuyKOdy+FtaaF8r
      4B5bXOTCBkaK3UIQBPx+P3a7nVdfeInU8Ditzoev/+8ESZJ4+qmntkwg7e3t1IpFWnt7mscy
      sRiZ5QS6bXN/l90tvDU8hiTLdHZ08I2vPYc+NUuPKfD1wf289tQzHDt4EFU3Sc7F0HX9vtIN
      /rZChptbx9xqBAM7+sg3DgJRlqncgRDpVnSvEeVen53FsY0xKAgCpqqSSCTo7u6mXC4zl0pR
      azRYXFzckzdoIwJ+Pz/8wQ8eufCv19DOzMys7nxy6NCWc4LBINaG2bpeqbI8MkrD7kRs37/J
      YDTLJSJGhQP79ze3pXU4nXw+egPR5YSxOuXUCvuefeKhveNvA0RRFJEkCUVRkGW5uc3n+r9d
      NSJJXI/H+eTLL3d9Y0EQKBQKLBSLm2yAjaiUSrw3PMz0zAxvffQRtkgEX3c3H587d0+z16MW
      /lqtRrFU4uz5C/zyvQ9paWnZVn30er0cfuIUoiRhGgaOTI4//h++R6ZqbrIh9MQiJ6Ua/+rb
      32oe+/TMF/zDz3+Gp7cbb1sUZLlZzXa793/UffOwscX0vytdUBAQQyEm8nmq1equL3O73bwy
      NISezW77e/TwYew9Pfzyq6+otbejOFb5JKdiMSYmJvb+nI8Y65mv//0ffsp773/AX302TEu0
      Y0deIUmS+PYLL2EuLBEoVXn5mWcJh8O0q+Imw9Wq1/i9F58nt9b/lmVRrdb4t3/0I+LnL5KY
      mMQZaiWT276ff5exJ9/XnWYHxedjbHycufn5OxrW5XKZYrFIoKUFX70OGwbeRjtDEARCBw8i
      yXKTkr3z6af58LPPfisNt3K5TCGb4fPzFzFsTj6djfO//dXfb1tYA6sG/PdefoVnjx1nZm6O
      f3zjDY7sG8Rq3MwDstvsZLNZ3j7zJZqmUSyVKEsWpUqF7r4euvq7SU1O4AvdmWLyt7FP7wV7
      GgB36hxBFDkXj/NBLMZPPvqI81ev7qiqVGs1JqemUFWVgNN5x7Y3uspkm42VYrGZUPfbAkEQ
      kGWZJ544hdGoYykqFV+EgWjwju7dDz78kP/6039CESVOHNxP0Kw3+6ySiuOw2/nei6eRJInx
      mWl8vV1MFjNIAR+qTWPg2GFq1dpt7/G7iPsa/ZBUFVc0iuZ2I4bD3KjXOXPpEvo2brdyqcRP
      fvKT1RyaWg3WDLrdzECCIKCbJsvx+P18/IcCp9PJ4MAAqgBybgV1aYojId8d3zvb0Ol56RUS
      +TzL8TjV5DKC3iBSSHJ6oIdAINB0DMTjCaZHp5mPLTM1Osns9TGMRgND11memqW+BzV1J+zF
      Vtgp2W1jvcGjsj2kf/Pnf/7jygNyh4myTMowuDo6it2yqKwt86qqotls7BscxGa38+XiIsoe
      3KiCIODv6eH855/T396OcwOj3OOOXC7HUjzO4uIiVURKkX6Gk3mOBZz4bkPiNTkzQzyTJT8/
      x1g8iVAs4FMk/uzbr3Pk4OYKtmvXr6P19OAKBnG1tiLZnUx9dZ7uw0MgiiTnYsiKvCem5Y1C
      e6vg3k6AtxP+Rq3O4sQUer2BZrcjSjdrP3bT5v3EAydekTUNwmG+SKWwDAM9leKPXnoJm83G
      5bExim439nD4zg1tgGVZCKKIs7OTv3v3XbpbWnjpmWfumFvzqNFoNPg//+r/YUH1sy/USaBU
      REjPk/Z38cX1Cbo72nf86B5VJXNlGL+mkk8l+dH3v08wGCS9ljJybXwcm6JQrZRZqRYRpidQ
      g2GcLS3kE3G6Dx3E5nRiczpRNJVyJoPb/3BTQVKxJUr5PPVqnXBfD9VSmfjsPG0Dm6v7NuYI
      rf93pxXyXnOHHugKsOlGirI6GHSdwx0dyLLMjfl5CAZ3PdI35izBKseQKxIhmUrhtCyi2+x3
      /LhgamqKd774gpKsoNeqtLocvHbyMB6bymiuynTZJGRV6YxsnQxM01wlqCrkUF0uOsNhLs/M
      kFleRgfOzsyStNmYXUkxGVukLgjUdJNSKr1aXFQqEuntbrYnqyorC4u4/b4t5aI71VlvFLLd
      9nGjVmdpaob0UpxsYgXN7SbQ3k5LNIJqs6E57MxdHyU5H1tlF7csxi9cxtD1TblKD9IwlwW2
      vtAdjd0Ny9Ne/fGmojA3P080EiHs8TC3h4zTW22E9esC/f18PjJCIp3mmy+//FgOgnqjQbxQ
      pPvkCToNg4MCeL0+1MQKgmViiCqfXxvj2WOHm8+fy+W4cHWE+eUlLEVGcTpp6VglpO2QZeau
      DLNSqWIPBBABezCIo/UmFWRqZppgwIt3/yrf6kbPmi8cYvbaDfo23G+3s+5uIAgCxWyWcrFM
      z5FD27PESRJDp5+lXq0ycf4ivlCIwSefYGliklq5smtS492uAtsN5B15gW6nizULiu8ig1CQ
      JD744guWlpfxOJ3o98EgAwgNDbGUSj2Wwg/Q39dHPZlAr9VWjXjDYHp2lp/O5jBVB0gyUzWB
      v/jZ21TW+uQ3H33Cm9enuJ4p4D2wj2BP9ypP/lrQzObxoGzwHt367qrThcD26SvpxSWifT23
      LXy/Vd/f6bydUK+sep1uZa24FarNxtBzz9I22I8oiUQH+1mcnNk0YG9nF+x2oG4RflG8Oy/Q
      ehDmbqKxmsuFr6+PaDRKOpVqbrN5r7AsC5/vzt6UR4XPPv+clqFDGKUStvgyPR0dTKcLmNrN
      KqyS3cdsrgSWRS6f53yqSMkS8Hu2d5G6W4OUUqs0MtsJRj2XoVFvsDg5TTaeRG80ME2TSrFE
      MV9gcmSckfPD6LvcmXPjPUzTpF6t0thAubLxd0PXya2k6D68PX3N7SCKIo4WH4V0ZtP33GvG
      aKVYZG5klGqpvK3mYBjG7o3g7ZbFu05H8Pv59VdfkctksK0VcdwtTF3HWlmBSoV0JkOj0diR
      N/RRYv++fVSuXeP44ADRSIRGo0Gn10F45gYJVxjT4QGjwQHNIJPL85NfvkkymcNhV+l55rlN
      s+E6REGksbYf87ZQVAp1HWc4Sj6dZnlkDEvX0as1Op58CkEQyC0tMT86Qe/hg3ecqdfRqNWI
      jU+h6wayqoBlEe3tRlYV8qk0WOALt+IN+llZiBHu6b5zo7cg0BZldvgq+ZU00f4e6tUamt22
      62e0LIvUfIyeAwOkluIsTUzSeXB/kyZyvT/lvSoM6+rPvVrfjTV9ddf6v2nSqFQQ1/KTREnC
      aDSw5/N885ln+PknnxCJRh9ZYcedEI1GiUajm45dnlvGcvo45lXwCEWCra04RTf/+89/Q7Fk
      YHQeQkpOby0aMU3SsRiVQhFZlEiMjeIMtuJoadnUn+7WEJV0EllRcIdCuDekXKyf54lESM/W
      WJ6Zw+F24W3dOVpsmSalXJ7Y5DSdBw82WecatToTl67g8nlwtbTQqNUYv3AFQRRp2cao3y0C
      HR3UyhUmr4xgd7sx9TpdB/ZtOS8xO9+kgAx2tuNaM6AFQUBRVSLdnbi8HuIzc4S6u0jMzmNz
      OfFHwwjvjI5a6TXioLvBrWkLG3GnAvrdol4sclDTCPp8vPXrX9Pe0UFvdzcOu53uri4WFhZ4
      4+JFXKUSL50+TSAQwL0dG8JjAl3XmZ2bw0Sg1e+nVC6BICCIIn/z6QUmBAc0auhTo4iWwcuv
      fQ3HhhhBtVAgl1yhtWdVhy+m05QyWRq6jrejs7lfW2Z2muiB/Xf8tpZlUSsWqRYKmKUibo+T
      SE/XluuS8zEK2TyiLNOxf3BLG7BZU7if9phlWeRTKYorKexuJ8G2KKVcnsTMHANHD62uRMDc
      6MRqqrdh4vZ5iKyR7FqWtUp/uZIi0t1JtVxhcWoW4f/74ANraYdktO0hsImH21rdecQZ8NPS
      0bG50COfx6jXsXm9O27BeqeXbqTTOAsFvIEA5UaDPr+fmXicSEsLT5w4gWma/OObb1JvbycX
      i1HLZjnc1cXrL7yw5/s9bBiGQb5Q4MLFi7wzvoDo9pG2eW9mx5omViaBjxp9Ha1EN7gyU/ML
      2DweypkMNpeLRq2GVC1hmiayppJaSuDu7MITCe9ZEGPDwxw4ehDtFl7RuetjhPv7keRHty1U
      KZdjaXKGRqVCZ383wbbIXe0euW7DyrZAK06nZ1Wm73LAuhAorSSJjdxAFFa3tRRFkcr4ON96
      /XVGYjHKLS2I8t74ZqrZLHI6TbG1lXS5vLoxhiTx7a9/vXnO5OQkKcCnKPh7erAsi6/eeoun
      jh7dwkP6OMGyLH753od8kCzjkiDvCWFo9s39I4rgD5M1dKqVwibVUxBF0vPzeCMRitkcPptE
      sK+Lxel5ppZzKMh4JLHJC7o4MoLN6cQTiWC/TT2yZVmoNtu2fEr1ShXTNJB4dAOgUiihKzZU
      XyvVah3TtBDv8nFEUUQWZRlZ3XuQYyMsy8ITbYNoG0ajgZJa4URnO3R0oCoKg62tjMzOYnR1
      7Zj7fysMXWdlYgJXW9uqu7TRoDg3R3Rtg+6FWIyO9nYqa6tCLZNhamyMhmlSqlaZmJriiZMn
      9/wuDwuCIHDq0AHKl0c4k8hTd7kQd/CsSallqmqN8TNf4vJ5MEyTerlC98nVHR5LuTzXF9Kw
      XEAKdyB0hKnEZsjmq6RSeQRBRA224XOrZBYWsLm3EurCqlMjfu0aXs/2qSXt+/pZGLlBqLcH
      p9eDaRiskyo8aNSrVWRVJbuSwte3yiNVLBS4fGGEQ0cGse1xI8T1Z5b+p//4P/+4bGzt9Lt9
      qdJiDK1cxFJUvpqawu92Y1oW05NTmE4Hyi7zT6q5HPVaHcXtobC8TEtXJ3q1Sn1lBafLhaoo
      fHH+PM8+8QQDnZ3s7+7GZbNxcmiIXLnMsUOH8DzGdgCA1+PhQE8XciHNSKGOJawKk2EYTfvJ
      KuY42OogODBIo1YnPr/AckXA43YgiQL5ZJLY5DTK4BEkTwuCKKLnMvg9TlyhMDavD83jRbY7
      yC0t4/a6KOVyFJaWMC3QnA5Mw8BIpfFWa+SWFons69tCqw6rPKL+SIipS8M4FBVpJUsutoSl
      Kij3YS/mnWCZJsNnzlMolLFkFdvaCiZrGqrbQ2kpRkvr3e1bIPxq5Ia1Ut9azrjRy7ObwdAs
      zrBWN5oQ1oy6cjqFmVqhmsuhiQKOvj6cweCWHWC2tGeaLI1PEugfIDV2nejBg+jVKktnzyKa
      Jm3hMGPT0/zpH/8xHe3tm65dL+98XINit0LXdf6Pv/spE+7NXiLLsqCQxb4yj2B3UalUqbVE
      sewu5EKabvK4An58DpV4rky5puNWBep1ncihI1tW2/zMJLJRJ+R08vWTp/j4/FcsFgoI2Rz/
      4U/+hFq9xm8ufknoltycjShlc+Qn53jp6WeJRCJUq1V+fu4zAp0dzXQGyzT3vDLczquYXlom
      UwPnNrlepq4jppboG9pKULwb7LgC7PSQt/utGS1c393FNCleG+b3nnmGuVwOzevjZCBAuVjE
      dDg2vbDRaJCJxSin05QyGdKxGP7efkRJophM4mzU0RcXKQsCLfv2Ua1U+N7LL9OzDQ/Rb5Pw
      w6ouOj4+wYIpsVGhFQQBQbNTz+cpt/ZgeAKgaMiNGv/xVB9T14YRLQNkGYdNgUKW9r5uBEPH
      0hxbHA+mYZJfWuIHr7xCJBIBwyCnqgiKwujly9yYnSZ6+MCOfdeo1XFkSnzz5Vep1+tcuj7C
      VxOjTF+5CoaJicXK7Dy1XI7cygqaw7ntZny7RTlfYPbGBCuJFM7W8LaOFKPRIB9fopwvUK9U
      cXpce/r2e8oG3Y1ra+NINnWd/X39XJydx97dSyOfQ7PZ0KpVqmu70NdKJWqFAsV8AXe0DWFN
      DXBrGqauE//yLE8dPoyMxYTDQVc+z8muLnqee+6xDHjdDSzLIisoWNIOG/8J4Kxk8asS89gx
      BQFJVviTH/2In/36bSxFxdPbj+xtwbJM2gf7mbp0BSPajb2lBaPRoJSIo9gdvPbUU4TW8oUO
      HxwieeYMB556mkgoxEoqxeXpCUy/uylsG793KZ3h2MA+JEkiubLCaGyejqOH6BIFWrs7iV0f
      ZfD4KjeUaRgsTs2i+1tw7oHNbyMEARqiQvjwsR3PkTUN375Dq7GRYoGVyzfo7mnblEx323vs
      pALt/FC7V4eMep2nPS7Ozc4hhiOU43G0UgFTVXB1d5O8cAGXIK6Svfb0orpv+rr1Wo3uWoVn
      Tp7A6XCwtLzMyOQkLz3zzAPZduhhIJPL8eZn52iIMoZl0eZ2IIgCLlXhF9emyXpuJrL5GiUU
      vU5atDEoN/jBsyeIhkL8l396h1HTjqtW4H998ThOVeGNjz+k6vQgKjJCpUiot5f8Sorl5RSC
      KCLbbLijbZTnZvi3r75Ma3DnYJdpmnx87gwT8UVc/ha8QT+2tR07LdPEnF3m1RdfwrIsfv3F
      Z4htoaZMzF8daQ4AWJWDhbFJDNPENC00lxN/W3STDK3LSrVUQpQkFE3DMi1EUQBB4MbFa7QM
      bA1+7QTLsqjNTzF0YivLxnbYUyTYNFd3JN+4EqzTe2xE8ze9gd2m4bVpFAUBRzhMajRNi8dN
      6upVypUq7idXd1yXbmmjsrTIy9/5drPttmiUtlsiqb9tuDo2wRcVEdZWrouZtbppq4FpmIiL
      02DomDYn3zu5j6+dOsH8wgLhUAjdMPjVu+9ztMXG9FKZks3Dry6N8r9851Vef/Y5vjh3jqX/
      v703CY4zu+49f9+c84xMzDMBEJxZRdUoqUqSZQ1+eu2h7bYj3N3e9MLd/SJ674WXjl6+Tffm
      LZ79usP2C8m23JZl+VlSSaUaVFWs4ggSxDwnkPP8zb1IZBIjCbJYJFiFXwQiSCCHL7+8595z
      zz3nf3JVTNsC5qkWSoRHJtC2JxXXcbg4OHDg4N/5fYqiyFdfeoXUvXtc31ghv5mlXl5AkiT6
      J8cRfZ72d/7i+Gne+vgjpI4YqteDSzN6t3J7mnAyQSiZoG98tP0+i1PTGA0d1aM1N/uWxerd
      e0AzxOoNBnChKZQmCM0u98qjrfKCIOD4I1y/ehvXNPB4VEzDJBIL0zXQ204kNHSd9NLa0fcA
      rfBcS0KxJazU+v9B2aGiLJNbXaEkK4geD2a1SuPeXQZiMeqKRuDU2L6zAdd1cSyT0vIyimns
      2+A+zzimwd0bV/EbFWqCgivv8Gm9AaRwDDEUxeNYfGVsgI5YjHA4jCzLFEslfnV7mj/67rcY
      DapcW9pgxZa5PXWHwViIb7zxVXoTHdzNlijmC/h7B6hlsriOjes6VOamsWpVJkdHkSSJYqnE
      u9eucXX2HtMLC4i2TTQSae+fQoEAn9y6Sbirk46+XvRGg4Xrt1BjYexyjVRHBz6fj0q+wGA0
      TnZljWK1gtQwuTg4QgCR1VwGf6gZiWuNj8zaOsF4jHq5wu233yXa2UnX6DCRZJJwsoNQIk64
      I4Fj22QzBUI9fY98iKr4fKiRKFosgRSKokQTNFyJ5ZkFNhZXKGayrKYLuKH4o7lALSPYGyFq
      zSCHdW3c+TijXEL2eBAPsOxaLsvm1Q/p7+jgm1//Oh6Ph3j8ybTlPA7kcjm+f+0T8oUys3YA
      QZLbq6rjOAjAuJ7ld7/yCn17XIX3rn7CO1Mz/Ic/+O+QZZnltXX++q33uGV78dk63x3q4Ksv
      XOCvfvkuW2srKF4vkiShmQZGsYgWj9IZDrOxuEiktxdPNIKWuN8D2qhWEStV/JKM7TjUHBvL
      46G0uYlZr1EvlYj3dOMN+NEEia9MnCEei7Unv0KhwNSdOwSDQXq6u7Ftm3tzs6TzORJnx9rv
      szI9S2Z9o6lDJYhYuDgujLxwEcs0m1ViK+vIkQTePblNT4JWlKp1evxI2aAHDfydfzvseTv/
      vdPPb1+U46CXSpjlMv/bn/wJ8WNU2tiKyT+JL2JpdRV/PM76egY5EN/1mpIkMWBV+F++9y1M
      2+HuvRk6U0ki2xtIw4VlU8R2HGSgr7uL//A73+HvfvEeP5/Lo8kiN+9MI9cq+GNxvOEwwa0N
      To+Pkd7cZKaQoypA7MxpvLEYsizvUtpQfD4cj4e6IDQNB9AABMgvL+MNhYh1daJoKka9wfzC
      ArFoFNd1KZfLOI7D+FjTV29NhqeGR+iudvLx4gLJoWaz9N6xEULxKDd/+jaeYAA0lZ7xU2TX
      NsjkyjiuS3xo9MhZn4+KIAi7Gro/0m6ypRu6N2bruu6hEZmjZIxWtzbZvHGdV154gVj06UuW
      P4harUZgu2C/UqmgKMpji+oubGwgdKao1nTE0J4v2HU53RGmVquhmyaaqu46yJNdh9MRz64G
      HKqq8ntvvsaNxb+ltyPB2Mgw0aCfH928jez1Uq9WiUajBEMh7v3qbeLDQ9tv5e5azff2hNiJ
      LxxmfmqGSnqd/MYmhGMMRAK88Fvfa098qqruagze8ggkSSIUCnHG7OHewgrhgZ5mE5Xpeb77
      zd+kWqtRqddwTYeZjSzR8cNDsJ8Vj2QAD4u+HFRZ9jBc12Xj2idoHg+Xzzx68cRnTSurtFqr
      sbKyQk9PD6Zpto3iUUiGQsyZJgclrwhGg1S0m0AgQGL7VHXnvXjlhUu88gLtk+IPb07h2Baz
      c3P0BDTGRoYRRZGB/n70f/4x9UKeRjbLx9euMTkxgbHdL6A1aHe6qw9aF8sKDwAAIABJREFU
      4QRBQNFUOl77Oq5t4dg2Uml3D2ZVVUlvbjE1O0NFN/nS5ARer7f9HvFYDO+2CIIYC+FLJYhG
      IpSqVQzD5EuXLtEVS/DevRm0oeFHvq+fhid2EPa4CIJAo1hkItnBi5cvHzsDaKEqColEAk3T
      WF9fJxgMPnLtgWmaTC8tUqsa1L3b0RlA1Ot8qyvA6xfOoWlaM3W3WqVSrdJo6GxubdHQG0zN
      zlKtVPD7fCylt/jBzXlkzcOf/s532yLGkiSRiEZZ0U3igksqkcAwDLyqSrZcwheNNsOZO6J3
      ruNgW83B3ahUsG2bzaVlMitr5NJbVLa2kKMdSJoHUVaougJbq6sMpJr1HPdmZvjRzTtkoilK
      mpfr84tsrK7S1xFvrzC6YbC8ucXqyiqiYZPO5lixbUzLwqnX+WRqilw2Q6C376mOgUfaBD/o
      wj5NcUxpfY1EqcAf/v7vP/ZrPE1aso+P2l3Ssiwaug6uy//5dz/mwkAPSa9KPBLh9Ogw2Vye
      H/ziA9aKNdI1C9NxkUSBmi0QamR44Wuv4K6t8HtfeZ1QKEQ+XyBfLjMysLv9k23bXN0WJOvt
      7iabzSJKEu+88w49pyeo1mqMdHUzWyogAUPhCL98/33KgRiC14fgugiKhqDXiPQPYFarFNMb
      hAaG7+f7Ow5SIQeORd1yUJOdu/x2x7KwVxf57vlJwqEQs6urrHq9CKKIbRjNyI4gsHn7Nqoi
      4guH8fh9rK1sEBu5n9bwuMmZzh4jP6ym+FOfBD+JGtz61hZVyzjwTOE48rhtVWVZJiDL2LZN
      p18l4ZHxeT3Igstf/ehn/HR2E13xAzKCqNzX7RPBNFVEWcYINJMLBUHA49EYCO1P+JMkiRcv
      X2Zufp5bU3cIBPx0xOP80R/+4a5CId+dOyyvrjA+NMw7s8t4k93t77eRy+DfjsIofj+qIlPb
      WMPf1QxLC6KIE2ueKRy0IxIkCScS570bN/B6vRjJJNr2dytv76Fc10VQZHonx3BdF0mSSJkW
      8x+8R3hgCH+i47ECEIeV7baU0Hd9J0d90b2x+oflBR3VMPRcjolEnDdee/W5GPxPgnvz89Si
      HXygC6DXqW3McnelguM5OHvVdWwiIU+z8F+gfWj4ID1RQRAYHhrC5/PRaDTo7+/fddjoui6V
      ep2xU6fwer3YxSxuorM5cG0bM59FSdyP6timha93f08G27YRBAHLslAUZde4sMtF1FOncCUJ
      TZL2jSG9WkVTZERRZHV6hoZhIQgCnZNnyC4s4o1EER8j3aWlHbXz0PawMt52g4yjlM3tfIFP
      O/O7rouTzfBKV4qze6T9nmcOOxRs/e3tj6/xUaaIELgfDtZiccSlIu5hG1HLoHugeR6SzefI
      ZDIEAoFDw8+taxAE4dA+aIIg8NJ2vcTN27cpOeATBOqbGwh6ncTwCOKOoIcaCGCbJoIkt59/
      0Pu2EyIFAVevN5PhDrhO13VZu/YJp1++AjQNKdzX314dvK16g8ccFzuvo309B4xZ6Vvf++0/
      z2xuovq8uz7wo77Ro+A6DsLGOr95/iyjQ0Ofm8EPkMlkMEzzwC7xb3/8Cb+u2eDZMXO7Lo6u
      U06nMdRDVgBRpry1RSoVRYnG+fjjj5jPbDG7vIJrGCRisfY9rFSr/OuHH/DrmRmMcpmg34+q
      qg+8x//tZz8jX62iYBMRTRzNhxYK73qO7PVQWVnCFZq5RXA/3t8Kee59D6tcJJpM7Ivpu65L
      ZnaWkfOTqF4PgiDg9ftZmbqDb1spsJLJYNYbeJ9QVd9hE7YshSJ4i0XW7s4gKTKKLCHQ1FQR
      PD48Xg8djyFr8SCsfI7ff/3VY1+w8jh07FBm20mj0eDGVgGCu7WLVj65RqYu4aiHf9GCIFBW
      oyzcniYV89F/6QKSLOMCn2S3cB2bof4BfD4fN6bvosdj+ICZWp0Pf/ZTOrwB4uEwZ4YGiEYi
      XL09RVk3ON3XQ6lUYmZ+jtNff4Ps6hqa10PE7yG3sYTuCeKJNVceUZKJj46xdfcOWrh5rQ/z
      HFxZIb+2Rqy3t/27SjZLZWMdTVNRPZ728yVFRvF42j66AASfQhdP2bUtfuvlF3l/Zp4lNYBj
      mbgueJMioixjGzqbc3Mkh4dxHWffcrbr8AOaSUyWRXUzDYaBbZqIikKgpxdEEVGS8Og6wceI
      oz/PGIZJfc8sVFpdIW/I2IEjHP4JIoVSg8GBjnZCF4AajXJDb/DxRx/S7/VRbjRguzxQ9XlB
      05hyFKS6y7sf3kQxGpihGEgSv742jWUaSAE/qs9LIBolEA7iC4eIdXeRT2+xtrGKJ9V934Vw
      bOoba3gSHQiy8kAj8HSkaOQ27rvPjoNdzDFyfnJXIbvruhTSWwSS9yVU4kNDZObncRxQPBrh
      nt7H9hQOO59yXRfZ7zq8e3eWHp/KfKWCHNg9K0uqRkPSKK6vU9jcQlJUukaHm61MtzEqZaT0
      Bt2pFLlCgZIoUb0zxf/xv/4pkiRRr9f5+PZtZFFmqqaTXlulVq/jf8Sev88DOwdErV5H3e69
      tpHN4CoaVqVMfmUNs14nbflxvc3Bv7OHws7T2ZabIYoiOjKRPbOiIAgoHg+Kx8Om40LAt1u0
      w3ERZLHphgRCWITaf29srKINj1GzILu8iixLbfkVQRCIdSbxBvzM3ptHDMVoZLfwVfN889I5
      SrU679caSA8ohWzkcyjFArmFBVzHBtuia7CvuXrtGJS1YolyTSfaf98AREki1t+PsbpAb3+S
      +fk5pHD8gS6R6zhUc1nMWp1wT88D0ynaaTxLS0vuz+/MYFcrqB4P6/5Ie6OzE6NcQvZ6AQF3
      a5XkaDPNNTd1myunRnn5wvn2SXG+UEASRfx+/66wk+u6/MMvfkk+GGaoWuKNL3/50At8HjFN
      k7m5OSzHYaCvj/d//QGvv/Yq0wuL/GxlE12SmXr/Oo1Q175yxVaLWlEU25GVnSnKoigiVfN8
      45VhAvGj50oV02lWyg5KaH9RirO2hC2KBI0yoxfPovkPnpAsw6RWKqFXaxTWN/juK6/TmUrx
      /7z1K8rhpot02KbY3FimM9oUoZL27DFty8Z1bBam54gPj+wbsEajQX1lkdGJEVSPxur8Emub
      RcJ9/ag+H7ZhUNlMo4XCSKpKfmGeUCpJNZejViwR7esncIhL2kK2bJtMqYzjD/KHFyd598ZN
      FjyhfUawM4nN8IepZjJY9Rpfn5zg/Pnzux4bfYCVSqaJKIpsmVY7rVp+RLmU44rrukSjUSRZ
      plKtcuniBf7L3/+AqighKCpSvY6BdKAyhiRJ7cnisNi3Kwg4ziM2NXfBcZ32irIrgbGrj9T6
      PC+dO8+C0YBDDEBWFUKJOCTiJPp7uTY/SyIe59sXzvDW7btsaAGQJOxaFUFRkFSt/R5KZx8b
      C3dJ7AmhGvU6C3dnQZRIjOwf/NAUzVWGT3F3bhlFryNJAmcmh8htZli59QmWZXPx1RfZWl1n
      PZ2j++Iltt+YfCZHJp1BCwQeKMQg/cVf/MWfj3YmyW+s8+HsPL/95VfZWlqkKGuHDkpJ81Bc
      WkCwTF4+M3lkFTZBEIgGAtyYvkfDtukPh3jrrV9QKBTo3bFRel6RJAm/34/P68Xr9fLx3dvE
      xgYIhQLEokH8HpV7c6vNohfVe+j9Pez3ilnj1FAK5QDNnsPQK1UKuo2gqO2VpWUEkiQhuS7f
      efkKxfQWDVVBEB9e8ioF/SzcnWawu4fLY6cw1lcQywV8mQ00XHTf/fFgFPLIepVEZ3LXIK9X
      qtR189DBv/P9vOEIWjyB4A+xNr+EZZhYhkGjYVKt6ZiOQLi3D8XrpZ7LsVms4+8fxgFU10Z9
      gKstAnQlO/i9b7yJbtlMzy9wdrAfKZ/Z1blxL76hMRqCsq+S62Ekk0kudSYJuQ7hcJiR0RFE
      USSfzz/S6xx3VtfXqHtlZEXhb/7xPf7LW3P84ONNzM5R3HAcNT2Da9Qf6TVtUcHQj6bkvBNJ
      lNorjCRJyLLcXm1KngA3781w8fQk9Y3NI72eIIpsVcr847/9BNd1efOVl3nz0gXqrsWXJ8cZ
      1CtEilm03Cb2+hK9XUlqq+s0Vjcor20A4I+EUQWHxiM0OpRVlcSpMcIjY0RGJ1CjcSrVOqbj
      4mynrRcyObwdyeYqWyrgfUh2cdvPEQSBwUiAd25N8QffeJPfvXiG739yCzuaaC+fuw53BIFk
      OEziAfWlh3HlwgVeOHcOURT51bvv8Z3f/Ca3b9/m3Llz7WbOzzO2bTO/sYavq+kfO6oXd2ek
      x6wT7UmCArlcHtMbOdJntrQAH350j/HRMr2nDpcuOYhWrH4voqryq6V1xgcH6A2ESNfqzejR
      Q16r49QIK1c/4dqNG9i2zWqtRN22KFbLfPvlKyiK0kyC0/X2OYQgCNy8dYtfT93FMAwMw0QV
      FTw7PAjbtu8XCD1ghXQdG28kQqirh1o+RyWXx7FtdAf8gohRySO5NrZhID7IBfqzP/uzP2/5
      4JOjI6iSyN2lVa6cP8tQLMytxWVMUWqfLrbKIAH8epUXxkaPPGDL5TJ3ZmZY29hgeXmZeCzG
      6MgwsXicbCZDuVIhsl0C+DzzyY3rGFEfoiQxPTXHbMHGVXd8CYJIUHHw9vbjD3qwsxuYrgwP
      yTESBIEGCm5hC9mogCBQ2dykntlCVNT2KepO9EqVkuEiaYdHa2qmxaBH5uz4BJnlFXRNfmhB
      iihJBFJJ5pYXMbwqgqbgDQSwA17uzNwj5g0QDARQFKW9iRcEgY6ODmTdYMsw8SRThPY0CW/V
      FbTGmGVZ+wxXEARUn4/Cyir+jiSZ6TvYuk65puPrG0IQRURZwZZVGukNAonEdqmthaXrlFeX
      cVyQPZ77BtCisyPBUHdX05/1ehEqJVatZiJXK5mo9YHCrsP54YFDDWDnhmt9fZ2//cd/pFqp
      sJROk3Zsrt66yfrSMmcmJohEopTLZcrlMj6fD+VT6Mk8SxqNBlMby3gizaDBj9+5Q92/Z5UU
      RXx2FSUSRVRUfIk4aqNAo1LDVQ4fqGo9z8U+L+e/dJ5wKoVeqWAX80xePoeRz5FdXUf27tYD
      0qtV0ovLmLUKRjF/4I9ZrbAwM8PpwUHCfj8LucyRlN5EScIbCtKoNyhmcgTDQUKxKN5IiIXF
      RYa7eg4UTOhMpcgsLZGp1fCEw2Tn5vBtuyqtMbYz/HvQ+KplsxRWlnFtBymzSd12kGJJ1O1o
      lyCKSJpGZX2FQCRMbmYaY32ZkCYyOj5EYWkRx+PfbwA7l0rTNNFkmaszc0i++3qRreWsXK9z
      JhnDs+dm6brO//f2O/zk+hTvXrvO2cF+/H4/F8+cwbYsXjh/nivj45Q2t9h0HWbX1sA0GRsd
      4d7MLIMDA89tYtzMzAw/fPsjphe3uDe7RtYQmy2Q9uDRi2jxpmEIgoAaCuP3yuhbaSx5zwbZ
      MuiTS7z20jjJvu72vfEEAjQqFaKxMOF4jEQqQWVtjfxmBsXnR5JlzHqDa4tVcraXgiHv+8nr
      MkVTZsPxEjTKTI4OMbO2ihrw77vmg5BkGW8ggCRLuJaJLxRErzfoEBR6HqDi0ZlMspLJUC+X
      Uet1pO10jp2h39a92YtRKHAhFGKyv583Lp7n5Ssv8s77H+Afm0AQ7o8bQRBQIjG2Pv6QaEAj
      FAkSDIcIxqJ4/V7SH17dbwC7PpwkUSyXuZktIB6whAqqSnF9jdN78tGnpqf5oO7gBkIEGlVe
      PD2OpmkoikJ3Vxf+7c7wPd3dRFWVxbU1CqbJ8vw8A319rKfTrGxuoUoSXu/h0ZLjSCQSYWpp
      g5tmgILoO3DwA3iMMp7Ejhi1ICBqHrw+DfJpTMsFWUU0apxLSVx6+QKKZ39kTpBk7GoFf6i5
      dwrHY8RiEYprK5SyedaW1smYKq6sNjeGe36EHf9OKQ4vnTuNbNms57JH0nF1XZdqoUBmcZme
      0aFmV8rlNJfOnnugcJmqqpzq6mKyt6k4UdqRSfqg79us1eiWJF65cIHOzk40TUOWZTrCIa59
      fBW1I9UOM9c2N3C3VokFVM689ALRVAelbI5KsYTfEvjtb33n4enQ3Z2dvJHJ8s5GDse/O9wp
      CCKzlsAv3/81L1++hK7rLC0t8d7CKkI4jlWtMBgL77sRxWIRn8+H3++nv6+Pvt5evF4vxVKJ
      a9ev899u3CFx+jTO3Rku93Ty2uVLZDIZOjs7j/3KIMsy2hHcN0c8+DFyMERswo80NUXELjF4
      epCO/sNDxGajgSe6O61EVhUGJ07RqNb45c1NnODRBIlXClVM0+LU4BCVapUN00JS9g+Rci5P
      Mb2JbZlYDZ1UXw+jF5qdIHOLq7x25uyRSkZb40ISxWbE8SETnVUq8UpnJ8P9/fv2Bacnxpm4
      M8Vio47k9WFWKyQkg54rFymm02ytrNE50ItlNDWYJi+cQdO0B68A0LTGnlSSoaAXO5cBx6Hc
      MNqtigRZYdUWePfadd6dX+Ze3aRaKSE0qqzfvMl3Xnt538GYZzvpSRAEPrpxk7mVFXo7UxTK
      FTZzOQaTCXr8Xl4Y7McjS+TyOW7dmwbHJR6Ps7q6iqqqz2yzXK/Xmw3WDnn/za0M13P6A79Q
      uV7Af8gppSCIaB0dDEVUkkOH77EASpubxOMRlINmWwGu3l7B0Y6QcuK6VOt1arlVJoeHSESj
      LC0skC+VKG1tUSsUqRZLNEolPLJI3+ggHV0p6uUKid4eGuUK3obNK9tyKY+yapu6zkKxuCu9
      Ztel2TZB0+TF7m6G+/sPnAQFQWByYoJPpu5ge/2Y5RJ+RSCSiGGbJvVKhVKpgitIiILL+vo6
      w30DRy+ISSWTfCuZxLIsZhcWub68ymJNh2AEp1ZBVFW0UBS7UcPIZwn3dtPb3U0kHGZ9YwNZ
      lolFo/ss95UX7mv493V30dd9sN94ZvK+1F0qleL21FS7mONpo+s6t6emSCWTdHV17StMWV6a
      ZwybjC6SU6IHFsFbNri2dWDaCYBVyOHp3i8hsxPHcVBFjtxP98G4vD6o0XWql9t3ppgYG6cv
      GGH++lXOvt5U76uVK8iKsqt5RtgfIFo16ezopaur67Hc1Z6uLszZWVT/7n2HIAiYtRq+YpFv
      f/WrD53wTNMkMz2FL5nnVCjArXSJeCpBIB4jEG8apWWaFJcWcfwaP/zJPz9aSSQ0l/jx0RHG
      RoapVCrMLC7RNdHs1/XTaze5u7XO6AsXcR2XzOo6/+mdDxEVBdtxiFaL/ME3v/Gp+3cpikI8
      /mizzJMkHA7T093N+sYGg3vUqTfSaXpPDzPREUdvNPjJT69SqDSQFAVZcHC3N2mSSrMDDNsF
      LLUKdqmA6NpogktQUwgmHhzrLy4vMXxq8MAZ0TJNfvjDt7E9R8unV2t5+k5dQNE0fv3xh3g1
      DwMDAyQ2V9qP8QUD7estZbI41QYXB0fp7f506n2qqjIQCLC5pyTWrNU4JQh86c03j+T6yrLM
      H3/v3xHZjijd+f7f4/H7d59+yzIWIj093aybi49uAC0EQSAYDHLp7P2Z+XuvvsTP33NZKZfZ
      XF1D8AVwPF5qpRLZrSzzps1vFotPpIFdR6KDubk5Tp8+/alf63GIRCJ0d3fvW9Fq9RqNeh0z
      vYU3GOCbb17iJ+/dQe3u3/caruviNOoIm8vEUyksn8zQ8FBbjLaaL2CZBqFEor1hbX2RerWG
      TxUPdn2A+btzrIux5ub3KNgWM3fmMR0HyePnx79+j++89jpqS77UdbEti2omj9cV+dLQ6BNT
      7RMEgRfHx/n769fR4vcFwxzbpqe7+0iDv5WFOzw83P6/6rpUCkX8oRCCJLI1v4DgWNQLJWav
      l7At6/EN4CBEUeRrr75KpVplvS/N3No6v75xi5VAF27HAN7sGn29vZim+cAEuNbJs+M4hy57
      pVKJrq4u8vk80acspiUIAuFDJL/j0Rgf/L9/TTDQ1MU5/9XX6AzIZF0X17YRdlROObktvEaF
      xOQZRFnGdRyW7tyhd3QI27Kp5HN4wxHWpu/hug6SJG8XxDffyyyViHYkCER2X4vruiytZnGl
      I1ZTuS5hxSE8el/C0NJ1/vmdXxFTVFjz4hdkEr4gL56+sCsy57oum5ubBIPBB9YoP4xwOEzQ
      cdiZ6CFKEsYRG6nPzM7i9/no7r6fdDfR2829u7N0ejScWARFcOmfbLZXch2H5enZJ2sALQJ+
      P6eGhzk1PMzkyAj/8VfXKQoQVpt54Icdctm2Ta1W459/8Uv6OhLksllOj48zNDREtVrF4/Xi
      2HY7ehAMBh9boeGzwu/3MxiPIUQCOK5Do1wirrqo5VUwDVa1BKI/iNuo4bXqdExM3n+yAGpX
      H7MfX0ORRUZfew2AQCLePsncKSacX1ll+up1Ln9tf1r5SH+CO3fqh68AjkNneZ4tNYlPNLn0
      6sVdf5Y1DTEQwNJ1vjZ5CY/H027bZBgGK+vr1BoNelMpCsXip96LCYLAWGcn1+r19mbYrVTo
      OXv2Ic9skt7Y2OUNOI5DenWVomHyP7z5Jqqq8nf/+mMYG8FxHGY+uUkoHv1sDGAnfV2d/M9n
      C/z42ifIgnlo9GR1fZ2fT90hW6tTyWQo1BuYiQ4W7tzjSqmMrMh0xeK89ctfkuruQnBckh0J
      Jp+RC3QYsizz5htvcPvOFNpQN+F4jFR/s5rJsR2yP/kV9WoYO5um+/JlLF3HXptH1TyUcjlk
      VWX0pStkFxb3FZnvPOF1LBu7WkYNBPZVPFmmiVlvEDEL5KUEsl7B0oLNtlSui+jaCK7D+Fgv
      pekMPZ2hAzMmbcdls1rjzsICdV2nZhikq1V0x0GLRolXKpybmHhiK/C5iQlu/vSnkEq1N8BH
      laHs7esjtkNTVhSbfr6czbZl9V89f4mrH9/AEUBWZDyK+vAw6JPA69GoFvJEB7q4fe06Az29
      bKTT3Lg3jURzxXjro6vU4h1UtjYJ+v14PBpiIokUCLBuWqxbDndWVqlH4+REidW1NSZ6e46V
      kG6LRCLB2KlTpJdWWFpeppTN4zoOvmAAs1JkeLSHnv4U5bU17FKWWDTI4OQYWAa1mk60u4tK
      Nkcgcf+keC+5pSVEy8TrUQhGI9vNsV0q+SKZ1XV6RofxSzZbmzm++1If1c0NJKNGp1znxaEw
      PSGBs5fPojaKxEdHdxWrtN7PF09gWjZFWaLm9dLweJCCQbRQCNdxGA2F6NyTy/NpKWSzFGUZ
      vVzGn8mgG8aR+kL4fL59hfl3Z2YQNZWeVAqv10tHRwcdgTDpYgErX+Y7X37js18BAIKBIN95
      8+tcu3mDf1lYJPPjH6N4PXSpGv+4sIDHdnCHTyEC4d4+8svLSKkuJFozX3NJFGP3N13+U+P8
      9ONPKNfqXDp39tidFkuSxJXzF9l87xd0nhrmo5+/Q79pYekGmt/bnOmjzQL59J0ZAPzhEOl0
      jvS9GcI7vvS9kjRGrY6MS2r8FFtzcwiiQL1cYXl6lmA0QtfwILIiE4kEGfYuEe9M8t3e7naG
      ZWtTWa9UaRgWvh0ry95672hf8/vILa/gCfjxhEJ4w2HEUomJV1554vft/NgYix98wFgkgtvf
      z81Skb6trXZbpweRTqebvc9olYpq1P1htrJZItu9D3p6ehje2mTsS682jeZprACtC0olk1y5
      eJF6Po8kCHz7zTdZXVsjFwihbdcii5JENbOFWa8jiALyIVmMrusyM7vEz7MW3TToTiWPnREo
      ikItX2RxdZWbVYXN1XU8SrOfFjTvSSWbR/N48Pj9mIbJ5so6ilcjEIsd0OTOJr+ySqNUpHOw
      D1lVKW5lqObzWKZJarCfaKoDUWoOcH8oSGd/D8t3ZwknYvtmSNuyKJeqSP5gWxJnr35OsyAl
      TCCRwDJM6vk8ms/H5UTiic3+O3WMPJrG6b4+Bnp6WNnYoB4JU1lfZ6iv74GvIUkSyysrxKLR
      toHHwmEW5+bZ2Ewz0NPT3jt2d3a1XaunZgDQvJmyJDE4MMD4UFNnsjMe587mFpLH236MLxpB
      9XjQiyVqW1vUclm8sd0ht1o2w2zewvEEuLmwjFjOUauUWE9voioKvmdwQHYQ3V3ddEcSLG1u
      kfYncQpZUl3x9uDOr20QSSSQFBmr0UDfzNATChORFcxaDWc74uI6Dvn5OeIdcTRVwRcKodfr
      SLbJwMQYwWgERd0fXJBkGW8wwMrde0SSHbsMQFYUEskEK3em0WLxB04gZr2OWa0SHxhAKxT4
      8qVLT3zCaUuktAzVdVlYmOfs4BDRIzTaCwaDTVU700RRFLxeL65u8NHN69yZn6MrkdgnxSPU
      63V3bzbn06JSqbC8vMxbq+so0dguRbWd/ciyc3NER0Z3zUxWo8HdX75NIXkK13UJmCWUngHI
      bfLV0Rhxzc9LZy88tpb/k8YwTP7p/Y94e26FUxGI+ANEvD6MeoNCo0ZXooPxnn66u7raQYJq
      tcr3338PW1WoF4pEoiGinfeVE+qVClQrpAaauUKlXIGl5Q3GxocQJZH0yjpb2SI1o1kY0t+T
      IByNEIiE2u9hmRbXPryOLcgkR0fbzSNa97peLFLe3ETzeYn29mKWy3x9cPCBmZ6Pw2G6s4ep
      7B1GPp/nP/7Dj+lMJvn2xUn6ujr54Vs/Q0jGsYolvnXhhXa41rKsZ2sAtVqNpaUl/vXeLL7t
      08R2jHz7VNBxHHLzc8RGxzBrNdZvXEfx+5H8AbRIjOk7C+gOhHu6EDQvFLJ8+0I3pmGSX0jz
      x7/975/JZzuMbC5HrVqlt7d332c9iLW1NcrlMqZp8uHtWyQunGlvWF3XZWP6Hj2DPaTXNlla
      TmP2n8beXEUTwfBHkHYkMJrlIq5pErIqDCSap7rFXAGxewjb0GkUi81VxHXRazVsvUG0t5fg
      tv9t6zqTXi8XJ55sI4tWodWTCGm7rssn0zN8f2qJgGvyR186RyafY1UCvVLhzZFxYtEouq43
      z5mewPU/NrIsM7uRxt/ZtU8yY6fevWNZ7TY+qj+Ar38Q2ePFqtcr1rZnAAAWMklEQVQxRAUn
      HKe+uoInFITCFpl1ic1CHTx+dF0/NqsANJtF7I1cPWiGax3s1Go1/H4/by/ObocsXXAh3N3F
      Oz97j/rABI6jEBBF5M4+bGDvcFKCTTeilBeQFIlUfy/dIwI3bs4Q6h/CF4tj1usggJPJkBwe
      ahfGGLUaE5/B4Ad2bcyfBIpl8LsjKf56Js3//espfqs/Ri27iZKMM7e4iEfTqFSrxKKf0TnA
      UcR2Hcfh6vXrLNrOrijETtJ3pjAMi0aljLq2iuz14gpCOxNV0jTisoleXica0tCCKr6hS6wb
      OnJ3EhD4m3/6Ef/j7/z2k/6IT5V6vd5MF69UcKpl1ldWkDUPc2tZpHgSop04egNP7Gj12bLg
      ogWCyMq2spt1v71RqwbAtW1Ur7f5+2KRl5JJxkZGPpNAg+u6GIbxRCYqQRCYPH2aW1NTfCvp
      4582KvxgIUNka5X+QpGrjQYXzpwhlUw2z6SewPXvotFosLGxwcDAg9N4p6an+ahSp1GtUS/O
      IqkqwWRql3Z8vVzGPzhKMBCktpnGqOuERsfvHw6JIn1nJtv/btE6STRKBVZmZlhbW3vsTMVn
      Tet03Ov1srK6ghQMMzgwiKyq6PI0m4FkU9J8fQUx9vCojGNZnAoJJFJNEdrVuUXU1OHJbFKx
      yDfOnDnSJvTT8CQDMaIoNqsKhWXiy2ly4RSFvgky199jKOhhK5Npd7J84tUl5XKZn771FrNz
      c4cq8lqWxfX1NFo4Qrivn9DAEEa9Qe7u7eYSvE0gnkDSmgKq/lQnvo7U/oooUTy0gNvWDcSJ
      s/zlT3/BD37+C/7tvfdZW19/Ik09nhaiKBKNRqnX69Q9KtHuLlSvt1mPq0i4ht6cxU3rwKq9
      vVi5LWRc7n18g5lPbjJ3+97BefiCgLO1xW88hcFv23a7CP5J0SzIl/n9ly7gqxURJAl5/AKy
      x4umqu3Gjk88DOr3+zkzOUnoAeoOjUaDX03dRfQ2lRNsw0CxdYbOnyF95w6uKKOXSliGjuDz
      P5ZsO4Di96MEgliuQy0YZVOQ+eDGTaRKEY+mtfNbjjMt5TxFUVjb2MD2eSltZVi5N0e9XKHm
      j2CtLhMYOJp74qkVsIt5atFuhGQvaqqH3OIiZqWMJxBsTyairvPlocFD+ws8SQ7q3PIk8Hq9
      zC8u0uX3MFO3EVQPeWTKc3fJF0t0d6aeTRTIdV3+5vvfJ5fqoZHLENBkkkPNQnjLMNCrVSzD
      4Pb7H9H52ptPPOJQvHOLQHcPHqOBIkkkA36+cnZyX07LUfYyT5NqrcrPblzn6q07lDv6QBCQ
      fH6M2XuERieO9Bqlax+RWS9w+TtfbReguK6LretUlubpGh/HqlX55mA/Aw85fHoeqFarzMzO
      8rPlDKuSb3tPk2PCyNGVTD6bKNDiygrLxSKSN0Ak6CXRd7/mVVIULNNifWEZJfzki14EQSBy
      uplhaG3/LLguax/f4HuTY3Qlk211Asu2kQ9o/PCs8Pv8fGXyLB9OL2KXCriNBo6q4k0efZZ2
      FZW+00PNgMIOV1DSNIKDI2zOzTGeiD7y4DcMg+p2X+LjhN/v5/y5cwwOVvhPP3+PddkPgRBf
      mRjn1MjIk98DHAVRgOEXL9MR8RPv2S2amltbZ62o4zl1lsS5i4e8wpNFEARMf4i/vXmX/+tH
      P2FheRkA5RiK9oaCQX738nns5QUUQUQRZXCcI+9rPPE4yZGDAxSioqBGYnjMo+Xgt7BtG0VR
      Hqt38tNAEARUReZ/ev0FLioGcnoZx3Fo6PqzWQGSiQ6CKyuIsei+DWwmncE7OPYsLgspGMYO
      hrm2sMRQ//4KruPCyPAQ/mQ3BW9zc+qmN0l4vEgeL0ZuC0nzIu7QcdqJHAyjlyvInoNTRURZ
      xvcI4rtwX816Z1O644Z3W7D4D958neEPP+Sv3nofLT73bFYAj8fD1168gpjdLYhrbB9sPWuq
      jzgDPm18Xi9vnB5F8AURAmGEzj4qy4tUF2Yo5Itk1taorywe+FxR85Db3MQ2DxbZlfwBtgrF
      R7qenSfaxx1Zlrly5Qp//OarDAW0Z3cSLMsyl4eGeW9jDW27163q9RJSRcxGA1FRmiHOPem5
      n/ns4rp0B4+mivYs6euIw/oCiBqCJKMn+9FFsdn9xXVxiul9z3FMA3ljkc6OGLWlBQSfH08s
      gbSniV7kED++dR5x2HfwvGi6ypLExOgIE6PPaA/QoqerC0+jset3qf5ehK0Vyrc/waxWAahl
      tticniZ37+6RX7slsNpKqGrlmzzQV3ZdQtUSr5w/91if52kSDQaQdszi7Vrj7R9rO31kJ46u
      E0rECff0kpo4jd/nY+qd96ls3jcWQRCYKZbJ5nL73tOyLEzTbP9/57+Bdrnk88QzNVlRFDnd
      1cONWhlRVZs6Nz4vQ+cmqebyLM/MkdMd5I5u1N4hjMV7R37tnQbQSjZzXffQWcp1XUKVIv/9
      K1f2aZ0eRzpTKbpll+UD/iYIAoYrkp+ZRqmX0LoHkMNRXNdB2KFRpAWDGL4IxdU1FFnCNU3c
      Ro2IV2Z2fn5fzlIotFunaO+9FAThuVkFWjzzqx0dHmbqV29jJ5o3uyWHrYWCTFy5zI2PpyDc
      XJKlaAf5hXm84TBaJPpAd6j1ZexMtDpcxdrByuf4xvlJ/P7j7/5Asw9b3nLhMNWTWArTMujv
      CCFrCnppk1KxzJbbbCQRSCYxazUQRM6MdNLR1bzH/nCouWJu3W9c4bou9Xq9nUb83ge/ZuLU
      GJE9in87xW2fF47FMejl4RGMSrV94ilJUls5wtmxisvhKEKyl0rDIjNzj0p649DXbA38vTLb
      B31Bjq7zejJK356Q7HHFtm3+8y8+oOI9XDnOvzHHgFAjmEoR7u4mOTrK8IVzqDsSznIbaZxw
      gmy5gT8cIhBpNscWELDd3Rvaljt1d3qaTaPGzdmjr8bHmWNhAIlYDM92Y4SdA9UyDGx5d1So
      JXmt9AxRzuaeSF6PY+gMPkennsVikYWa8UDtUa/fR2p0FNV3f0UTZZm+c+eQZInq/D16Iyoj
      doZr6zWW53Y4UwLoO/cXgoDf70c3DG7cu0tsoIdCvfpc5VQdxrEwAE3T+OqZc0hbWfTtjW/L
      ABzxYC9NEAQEWUHPZbH2bKQfFUFRKW2/7/PA7cUVTO9DDp0OMY703Dwbt27R359i9NxpXrg0
      BqJEqVhqP0av1ujdcbpcr9e5dWeKH731b0RGmhNFbm3juQh7PoxjYQAA4WCQb7/8CheCEYy1
      dWzLAgSkB7iUWmcPxUqD7CNEhw7CaTSIf8YZj0+S9XQaN7uJ26jh2hauZeKYBu6OjMqC6KFR
      2e3Hr96Z5uZMjrt6jP/6b/f4l3/4Gf5wkAmtxujECADFTBZvzeTU8Ej7uR/evM6mYtNxehRv
      MIBtmpweGT12omSPwzPfBO9EFEVODQ8z1N/Pv33wa+ZmZ3D9h+e4i4qKJ9mJLsvUsxm88Udv
      2Afgw31uNr8AfYkIvzOUpJQrYOg60FwRi7U6W8Ua6UwRu1phce0esiTian5sSWOhpODKzY2s
      IfpYyDcQgFd/48u4joOxssmVkTESOzQ/bdumbBuEPfd/V8rkeOH000lT+aw5VgbQQpZlvvGl
      l0hXSxiFOuYBzRMc08CqVrAbdXBspPBhWvv3NSwPYzTsP1Zlkw/jzMQE781MkerfXcjSSil8
      95cfUT99Fte2ERWF4twsyzlw94QoIz4RUZKwDBMxV+b1y1f2yVZKkoQm7HYUnIbxSBPGzl5x
      x41j4wLtRRRFNFlGZf/gd20bIb1EKqAwONCFXMqg+B8vEcup1xlMpR7+wGNEMBAkjILrHGzU
      gighyjKSpiGIIuGhYTr9BqK5uy+x42zr8WSKBw5+aA5eTVLag9h1XeLe/XlGrcPGtfV1isXd
      qRSmaT7xgpcnxbE1AACfohKLBrAb9bZ/67ouZiFHorcHf6IDxesjlEw9sKn3g+jHYmz40Xru
      HgfOnBqjlN7a93vXdXHZfS8ESSJx+jRhsYpgb+c5uQ5nRzsQRZHqIXlBANlslrJ4v2dvvVyh
      L7lfEqVWrzF9b5rOVGrfgdmz7ObzMI7nVW3TsEwSnUnufTCFRxZBaMoCapoKiftyH6rfT3lh
      FkFWCPQNtFeMvSpnLVzHwTFNZL3O5fGRfX9/HvD7/fT6wuRNE3nHzH332m0qooe9c7kgiqTG
      RkiszGOIHrySy+TF8wCYkkC+UDhQZ3V+ZYlQ6v7eSi+W6Rye3Pc4v8/P+Nj4k/lwT5FjawDZ
      bBY5GMAT8NMbkpG6BlG8XixdR1IV8ouLiKKEGggQTHUSTHWSm59HL5fQQuEDB79r27jFPEOC
      TWdHgs6hkee66ikaCrNR2kQO3x/udd1E6Rjc91izXKLHYzPw7a8iCAJrd+4ibkdxZI+Ke0hI
      szfVxbXMKsFYU8c0ICrP1X7pYRxbAzAtq9l1cD2NqXjxbMt1tFQjYoNDlDfWqWyl8cc70EIh
      Qj09bE7dQgueZd+8X69x3q8xfvEMXZ2dx3JD9qj4fF6srT3ui+vsEtMVBAGrWiFqlxk6e19K
      3hsO06jW0Lwe3Grj0E2t3+/HWm1GmvRanb4jSq88LxxbA7C2DaCYLxDoPniWDnZ2NTUzFxcQ
      RBEtGARBQC/k0KL3w3ZOo87XuxKcG382hTafFeFQGPTdGZkeCczNdeRYAmF9gYbiJeDqnH5p
      d9iynMsjWyYDkQQvXLxyaIOLYDDIUCjB2kqahC/I8Onnb7/0II6tAeQLeTzb3cpd4LD5WhBF
      bNNADQRwLAvV58eqlHcZgFgpMzH84md/0U8ZSZKQ99wZUZKwc2m8os2Fly+A6yLJctvdAShn
      c0iuzfyN2/zOn/7vD00qPDM2zqQ79rlYNfdybA2gqDdwvDLlSoNI5+HBKtd1EUSR7OwMruM0
      61Nju88EGoaBZVmHtmZ6XhEEge5InKxhIogCkiwjIPCl119A9XrbJ7V7B64/EqaQ3mRg+OgB
      gM/j4IdjagCWZZFr1MnNZggNHqx3s9PHTYyO4ToO6ZkZfP1DiIq6K249EAl9rjZuOzl9aox/
      +cXPWCvmCUUjuKKI5vMdeABY2kgjKQr+eIzk0AB9KJ/bgX1Uju05gOnY1HVrX5MIOHg22rw3
      jbenf9fgB9BKeb738pVjL4D1uEiSxEsXLhPt6iLY1U3v5Gksy2qrrbV+8usbTITiiLkitmUR
      023OjR9NS+jzzLEcFdlsFiUYoFbfn+W5c/C30qYr6TQdER9GZgPX2XHi6Ni80NnxTLrJP03i
      sRhhV0RSmgu6oii7aiAAfJEwH8/eQ+xOom9luTQx+YWf/eGYGoCiKBQ2NtEiBzdibh27t7Bq
      FbpPDTM+2oO4tYJVr+HaNoOuyeUz+w9tPo+cHx6lli/scg3hfmGQ6vHQeX4S17K5PDCM53Pq
      Ej4qx9IAPB4PwUiIRjGHYRiYpolpmhiGgWEY6LqObdvout4swt4+3td8PkbOjKGWtohVS3z3
      pSufi5Tdo6CoKo7ZdH0cx2kXxbdcIMdxaOSLnE900tv1fFS+PQ2O5SY4l8+jBgJ4pM37pZHb
      he07Z7iWEJMo7G7qJho6v/HK2S/M4AfQVBXRcdv3xDIM9IaOKIo0ymW8iLw4NErnc5b491lz
      LA1geTONFvFj2veX8p0hvb37AMl2sNe3KNoGoijx5XPn6TxCW83PEx6Ph16vn9n5RTr8QbpD
      YULRCA1dJ97VTyQc/kJNCEfl2BmAaVnkjAZWyUEORh7+BMA3OkHYMfnNCy9jmubnftN7EKIo
      8uLFS7xwjHPvjyPHbg+wtraGqSlkNjabqQ17OCi7U5Qklrfl/Hw7YuBfRJ5HaZJnybEzgKvT
      d/CFQxSL1bZ+/VFQZOnY5pyfcHw5ViPGcRwEqbnRVZTD/VXXddsFMGathqbX+crZMycz3wmP
      zLEyAFEUifmDlOt1rAcsTla9hrq6xNjwCF29XXR3daIe1OfqhBMewrEyANd12aqWsR1jVzbn
      zr8DOKbJl86d4/T481eBdMLx4lgZgK7rWIpMKZtH6djfutPa3MAjSaiu+1Sat53w+edYGUC1
      VmP1xi1K5QrdX95feC0Db4yfoq+398TfP+GJcKyiQFtbW0guiB4v8gES5VUX/usPf/jcadCf
      cHw5VitAuVwmmUgQDPkxa7V9YdCEpvDv/+RPPre5/Sc8fY7VCrCyvMytW7fRazVq2cyuv7mu
      S0TT2hr1J5zwJDg2BmAYBuVyGdOyCEQiu4SurEaDjkqJy6dGn+EVnvB55Ni4QKZpsryxTjjV
      gSTL+BL31ZqDtQr/7mtvPLNrO+Hzy7FZAe7NzNDZ18fkV17DMq1d/YOrssytqSks63i3Lz3h
      +ePYGMDw0BBWuUK9XKZUbeyKAgnBML/cypFObz7DKzzh88ixMYCPrl7l+rVrGPUGlu3sivO7
      jkNScOno+Hypkp3w7Dk2BtBoNPCFQhRzBTwdu6uWguUi33vl5ZN8n88RtVptX5/hZ8GxMYBw
      OIyl69RNFy1wvw7ArtcYTcROUp0/Z2iadiwq1I6NAbTi+1a5QGm12bHQsUzOeBQunTnzLC/t
      hM8ASZKOhVbTsZlWu7u68Pt8aKqMXWt1ihQRhcPL+2zbxjCMpuyHqp7kB53wyDx7E9ymtQKs
      3L5LI72OubZIdXGWW9PTh7bjbCmgSZJ0MvhPeCyOjQEEAgHeePNNgtEIdqNBPb2BXcxj6vVD
      +0tpmkYgEDjZH5zw2BwbAwC4eOECjq5TzufxeDRkQUCXJeaWlh/+5BNOeAyOlQEkEgm++93f
      QhFF7l29RiGXwxVE3lnbYGl19TPvNNhSUjvhi4NQr9ddzwG5988Ky7JYWlriP//lX9KwLURF
      JTo8gk9VOZ3sIBQIcOXFz67ZxU5dzRM+/xw7A2ih6zrvvPsut27dQpZlvve977XLIE8G6AlP
      imNrADtZXFykr6/vWMSNT/h88VwYwAknfFacTKknfKE5MYATvtCcGMAJX2hODOCELzQnBnDC
      F5oTAzjhC83nzgAOaqBxwgmH8bkzgJNT4hMehc+FAZzM+ic8Ls+1AbgnDeFO+JQ81wbQGviO
      47TLI09WgxMehefaAFzXxTRNarXadl8x5WQ1OOGReO5qCV3XbefsV6tVbNtGVVVs2253lT/h
      hKPy3BmAbdvYto2u68iyjN/vRxCEE9fnhMfiuXOBXNelVquhaRper7ft8py4Pie0aDQau4SU
      W17DQTw3K0DrA7Q2uodJpZzwdNk5sI7LJGSaJrZt4zgOjuNgGAaqqiKKIpIk7VKke24MQBAE
      KpVKuz9YvV4HwOv1PsvL+sLiui66rqPrerPBuSDg8/k+c/3Wh4W+W4PeNE10XW//vrUiyLKM
      pmltIbVjbwDt3sDbH2onJwoOzw7btqnVau3/u65LpVIhEAh8ZkZgWRb1eh3TNFEUpe0CG4bR
      FkhriaU96DUsy6JaraKq6vE3AMMw2la91487DuKqX0Qqlcqh917XdVzXfaJSla3vvzX4oenm
      fFp1acMwkI+DRPWDqNVqSJJ0YGtU27ZpNBrP4Kq+mLQib62Z+CBa34miKIii+ETOZur1+mfW
      Hej/B83mGs6/aQwxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='i' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
